package org.apache.roller.ui.authoring.struts.forms;

import org.apache.roller.RollerException;
import java.util.Locale;

/**
 * Generated by XDoclet/ejbdoclet/strutsform. This class can be further processed with XDoclet/webdoclet/strutsconfigxml and XDoclet/webdoclet/strutsvalidationxml.
 *
 * @struts.form name="websiteForm"
 */
public class WebsiteForm
    extends    org.apache.struts.action.ActionForm
    implements java.io.Serializable
{
    protected java.util.List permissions;
    protected org.apache.roller.pojos.Template defaultPage;
    protected org.apache.roller.pojos.Template pageById;
    protected org.apache.roller.pojos.Template pageByName;
    protected org.apache.roller.pojos.Template pageByLink;
    protected java.util.List pages;
    protected java.lang.String id;
    protected java.lang.String handle;
    protected java.lang.String name;
    protected java.lang.String description;
    protected org.apache.roller.pojos.UserData creator;
    protected java.lang.String defaultPageId;
    protected java.lang.String weblogDayPageId;
    protected java.lang.Boolean enableBloggerApi;
    protected org.apache.roller.pojos.WeblogCategoryData bloggerCategory;
    protected org.apache.roller.pojos.WeblogCategoryData defaultCategory;
    protected java.lang.String editorPage;
    protected java.lang.String blacklist;
    protected java.lang.Boolean allowComments;
    protected java.lang.Boolean defaultAllowComments;
    protected int defaultCommentDays;
    protected java.lang.Boolean moderateComments;
    protected java.lang.Boolean emailComments;
    protected java.lang.String emailFromAddress;
    protected java.lang.String emailAddress;
    protected java.lang.String editorTheme;
    protected java.lang.String locale;
    protected java.lang.String timeZone;
    protected java.util.Date dateCreated;
    protected java.lang.String defaultPlugins;
    protected java.util.Locale localeInstance;
    protected java.util.TimeZone timeZoneInstance;
    protected int userCount;
    protected int adminUserCount;
    protected int entryDisplayCount;
    protected java.lang.Boolean enabled;
    protected java.lang.Boolean active;
    protected boolean commentModerationRequired;
    protected java.util.Date lastModified;
    protected boolean enableMultiLang;
    protected boolean showAllLangs;
    protected java.lang.String URL;
    protected java.lang.String absoluteURL;
    protected java.lang.String pageModels;
    protected java.util.Map initializedPlugins;
    protected java.util.List weblogCategories;
    protected org.apache.roller.pojos.WeblogCategoryData weblogCategory;
    protected java.util.List recentWeblogEntries;
    protected java.util.List recentComments;
    protected org.apache.roller.pojos.FolderData bookmarkFolder;
    protected java.util.List todaysReferrers;
    protected int todaysHits;

    /** Default empty constructor. */
    public WebsiteForm() {}

    /** Constructor that takes the data object as argument. */
    public WebsiteForm(org.apache.roller.pojos.WebsiteData dataHolder, java.util.Locale locale) throws RollerException
    {
       copyFrom(dataHolder, locale);
    }

    public java.util.List getPermissions()
    {
        return this.permissions;
    }

   /** 
    */
    public void setPermissions( java.util.List permissions )
    {
        this.permissions = permissions;
    }

    public org.apache.roller.pojos.Template getDefaultPage()throws org.apache.roller.RollerException
    {
        return this.defaultPage;
    }

   /** 
    */
    public void setDefaultPage( org.apache.roller.pojos.Template defaultPage )
    {
        this.defaultPage = defaultPage;
    }

    public org.apache.roller.pojos.Template getPageById()throws org.apache.roller.RollerException
    {
        return this.pageById;
    }

   /** 
    */
    public void setPageById( org.apache.roller.pojos.Template pageById )
    {
        this.pageById = pageById;
    }

    public org.apache.roller.pojos.Template getPageByName()throws org.apache.roller.RollerException
    {
        return this.pageByName;
    }

   /** 
    */
    public void setPageByName( org.apache.roller.pojos.Template pageByName )
    {
        this.pageByName = pageByName;
    }

    public org.apache.roller.pojos.Template getPageByLink()throws org.apache.roller.RollerException
    {
        return this.pageByLink;
    }

   /** 
    */
    public void setPageByLink( org.apache.roller.pojos.Template pageByLink )
    {
        this.pageByLink = pageByLink;
    }

    public java.util.List getPages()
    {
        return this.pages;
    }

   /** 
    */
    public void setPages( java.util.List pages )
    {
        this.pages = pages;
    }

    public java.lang.String getId()
    {
        return this.id;
    }

   /** 
    */
    public void setId( java.lang.String id )
    {
        this.id = id;
    }

    public java.lang.String getHandle()
    {
        return this.handle;
    }

   /** 
    */
    public void setHandle( java.lang.String handle )
    {
        this.handle = handle;
    }

    public java.lang.String getName()
    {
        return this.name;
    }

   /** 
    */
    public void setName( java.lang.String name )
    {
        this.name = name;
    }

    public java.lang.String getDescription()
    {
        return this.description;
    }

   /** 
    */
    public void setDescription( java.lang.String description )
    {
        this.description = description;
    }

    public org.apache.roller.pojos.UserData getCreator()
    {
        return this.creator;
    }

   /** 
    */
    public void setCreator( org.apache.roller.pojos.UserData creator )
    {
        this.creator = creator;
    }

    public java.lang.String getDefaultPageId()
    {
        return this.defaultPageId;
    }

   /** 
    */
    public void setDefaultPageId( java.lang.String defaultPageId )
    {
        this.defaultPageId = defaultPageId;
    }

    public java.lang.String getWeblogDayPageId()
    {
        return this.weblogDayPageId;
    }

   /** 
    */
    public void setWeblogDayPageId( java.lang.String weblogDayPageId )
    {
        this.weblogDayPageId = weblogDayPageId;
    }

    public java.lang.Boolean getEnableBloggerApi()
    {
        return this.enableBloggerApi;
    }

   /** 
    */
    public void setEnableBloggerApi( java.lang.Boolean enableBloggerApi )
    {
        this.enableBloggerApi = enableBloggerApi;
    }

    public org.apache.roller.pojos.WeblogCategoryData getBloggerCategory()
    {
        return this.bloggerCategory;
    }

   /** 
    */
    public void setBloggerCategory( org.apache.roller.pojos.WeblogCategoryData bloggerCategory )
    {
        this.bloggerCategory = bloggerCategory;
    }

    public org.apache.roller.pojos.WeblogCategoryData getDefaultCategory()
    {
        return this.defaultCategory;
    }

   /** 
    */
    public void setDefaultCategory( org.apache.roller.pojos.WeblogCategoryData defaultCategory )
    {
        this.defaultCategory = defaultCategory;
    }

    public java.lang.String getEditorPage()
    {
        return this.editorPage;
    }

   /** 
    */
    public void setEditorPage( java.lang.String editorPage )
    {
        this.editorPage = editorPage;
    }

    public java.lang.String getBlacklist()
    {
        return this.blacklist;
    }

   /** 
    */
    public void setBlacklist( java.lang.String blacklist )
    {
        this.blacklist = blacklist;
    }

    public java.lang.Boolean getAllowComments()
    {
        return this.allowComments;
    }

   /** 
    */
    public void setAllowComments( java.lang.Boolean allowComments )
    {
        this.allowComments = allowComments;
    }

    public java.lang.Boolean getDefaultAllowComments()
    {
        return this.defaultAllowComments;
    }

   /** 
    */
    public void setDefaultAllowComments( java.lang.Boolean defaultAllowComments )
    {
        this.defaultAllowComments = defaultAllowComments;
    }

    public int getDefaultCommentDays()
    {
        return this.defaultCommentDays;
    }

   /** 
    */
    public void setDefaultCommentDays( int defaultCommentDays )
    {
        this.defaultCommentDays = defaultCommentDays;
    }

    public java.lang.Boolean getModerateComments()
    {
        return this.moderateComments;
    }

   /** 
    */
    public void setModerateComments( java.lang.Boolean moderateComments )
    {
        this.moderateComments = moderateComments;
    }

    public java.lang.Boolean getEmailComments()
    {
        return this.emailComments;
    }

   /** 
    */
    public void setEmailComments( java.lang.Boolean emailComments )
    {
        this.emailComments = emailComments;
    }

    public java.lang.String getEmailFromAddress()
    {
        return this.emailFromAddress;
    }

   /** 
    */
    public void setEmailFromAddress( java.lang.String emailFromAddress )
    {
        this.emailFromAddress = emailFromAddress;
    }

    public java.lang.String getEmailAddress()
    {
        return this.emailAddress;
    }

   /** 
    */
    public void setEmailAddress( java.lang.String emailAddress )
    {
        this.emailAddress = emailAddress;
    }

    public java.lang.String getEditorTheme()
    {
        return this.editorTheme;
    }

   /** 
    */
    public void setEditorTheme( java.lang.String editorTheme )
    {
        this.editorTheme = editorTheme;
    }

    public java.lang.String getLocale()
    {
        return this.locale;
    }

   /** 
    */
    public void setLocale( java.lang.String locale )
    {
        this.locale = locale;
    }

    public java.lang.String getTimeZone()
    {
        return this.timeZone;
    }

   /** 
    */
    public void setTimeZone( java.lang.String timeZone )
    {
        this.timeZone = timeZone;
    }

    public java.util.Date getDateCreated()
    {
        return this.dateCreated;
    }

   /** 
    */
    public void setDateCreated( java.util.Date dateCreated )
    {
        this.dateCreated = dateCreated;
    }

    public java.lang.String getDefaultPlugins()
    {
        return this.defaultPlugins;
    }

   /** 
    */
    public void setDefaultPlugins( java.lang.String defaultPlugins )
    {
        this.defaultPlugins = defaultPlugins;
    }

    public java.util.Locale getLocaleInstance()
    {
        return this.localeInstance;
    }

   /** 
    */
    public void setLocaleInstance( java.util.Locale localeInstance )
    {
        this.localeInstance = localeInstance;
    }

    public java.util.TimeZone getTimeZoneInstance()
    {
        return this.timeZoneInstance;
    }

   /** 
    */
    public void setTimeZoneInstance( java.util.TimeZone timeZoneInstance )
    {
        this.timeZoneInstance = timeZoneInstance;
    }

    public int getUserCount()
    {
        return this.userCount;
    }

   /** 
    */
    public void setUserCount( int userCount )
    {
        this.userCount = userCount;
    }

    public int getAdminUserCount()
    {
        return this.adminUserCount;
    }

   /** 
    */
    public void setAdminUserCount( int adminUserCount )
    {
        this.adminUserCount = adminUserCount;
    }

    public int getEntryDisplayCount()
    {
        return this.entryDisplayCount;
    }

   /** 
    */
    public void setEntryDisplayCount( int entryDisplayCount )
    {
        this.entryDisplayCount = entryDisplayCount;
    }

    public java.lang.Boolean getEnabled()
    {
        return this.enabled;
    }

   /** 
    */
    public void setEnabled( java.lang.Boolean enabled )
    {
        this.enabled = enabled;
    }

    public java.lang.Boolean getActive()
    {
        return this.active;
    }

   /** 
    */
    public void setActive( java.lang.Boolean active )
    {
        this.active = active;
    }

    public boolean getCommentModerationRequired()
    {
        return this.commentModerationRequired;
    }

   /** 
    */
    public void setCommentModerationRequired( boolean commentModerationRequired )
    {
        this.commentModerationRequired = commentModerationRequired;
    }

    public java.util.Date getLastModified()
    {
        return this.lastModified;
    }

   /** 
    */
    public void setLastModified( java.util.Date lastModified )
    {
        this.lastModified = lastModified;
    }

    public boolean isEnableMultiLang()
    {
        return this.enableMultiLang;
    }

   /** 
    */
    public void setEnableMultiLang( boolean enableMultiLang )
    {
        this.enableMultiLang = enableMultiLang;
    }

    public boolean isShowAllLangs()
    {
        return this.showAllLangs;
    }

   /** 
    */
    public void setShowAllLangs( boolean showAllLangs )
    {
        this.showAllLangs = showAllLangs;
    }

    public java.lang.String getURL()
    {
        return this.URL;
    }

   /** 
    */
    public void setURL( java.lang.String URL )
    {
        this.URL = URL;
    }

    public java.lang.String getAbsoluteURL()
    {
        return this.absoluteURL;
    }

   /** 
    */
    public void setAbsoluteURL( java.lang.String absoluteURL )
    {
        this.absoluteURL = absoluteURL;
    }

    public java.lang.String getPageModels()
    {
        return this.pageModels;
    }

   /** 
    */
    public void setPageModels( java.lang.String pageModels )
    {
        this.pageModels = pageModels;
    }

    public java.util.Map getInitializedPlugins()
    {
        return this.initializedPlugins;
    }

   /** 
    */
    public void setInitializedPlugins( java.util.Map initializedPlugins )
    {
        this.initializedPlugins = initializedPlugins;
    }

    public java.util.List getWeblogCategories()
    {
        return this.weblogCategories;
    }

   /** 
    */
    public void setWeblogCategories( java.util.List weblogCategories )
    {
        this.weblogCategories = weblogCategories;
    }

    public org.apache.roller.pojos.WeblogCategoryData getWeblogCategory()
    {
        return this.weblogCategory;
    }

   /** 
    */
    public void setWeblogCategory( org.apache.roller.pojos.WeblogCategoryData weblogCategory )
    {
        this.weblogCategory = weblogCategory;
    }

    public java.util.List getRecentWeblogEntries()
    {
        return this.recentWeblogEntries;
    }

   /** 
    */
    public void setRecentWeblogEntries( java.util.List recentWeblogEntries )
    {
        this.recentWeblogEntries = recentWeblogEntries;
    }

    public java.util.List getRecentComments()
    {
        return this.recentComments;
    }

   /** 
    */
    public void setRecentComments( java.util.List recentComments )
    {
        this.recentComments = recentComments;
    }

    public org.apache.roller.pojos.FolderData getBookmarkFolder()
    {
        return this.bookmarkFolder;
    }

   /** 
    */
    public void setBookmarkFolder( org.apache.roller.pojos.FolderData bookmarkFolder )
    {
        this.bookmarkFolder = bookmarkFolder;
    }

    public java.util.List getTodaysReferrers()
    {
        return this.todaysReferrers;
    }

   /** 
    */
    public void setTodaysReferrers( java.util.List todaysReferrers )
    {
        this.todaysReferrers = todaysReferrers;
    }

    public int getTodaysHits()
    {
        return this.todaysHits;
    }

   /** 
    */
    public void setTodaysHits( int todaysHits )
    {
        this.todaysHits = todaysHits;
    }

    /**
     * Copy values from this form bean to the specified data object.
     * Only copies primitive types (Boolean, boolean, String, Integer, int, Timestamp, Date)
     */
    public void copyTo(org.apache.roller.pojos.WebsiteData dataHolder, Locale locale) throws RollerException
    {

        dataHolder.setId(this.id);

        dataHolder.setHandle(this.handle);

        dataHolder.setName(this.name);

        dataHolder.setDescription(this.description);

        dataHolder.setDefaultPageId(this.defaultPageId);

        dataHolder.setWeblogDayPageId(this.weblogDayPageId);

        dataHolder.setEnableBloggerApi(this.enableBloggerApi);

        dataHolder.setEditorPage(this.editorPage);

        dataHolder.setBlacklist(this.blacklist);

        dataHolder.setAllowComments(this.allowComments);

        dataHolder.setDefaultAllowComments(this.defaultAllowComments);

        dataHolder.setDefaultCommentDays(this.defaultCommentDays);

        dataHolder.setModerateComments(this.moderateComments);

        dataHolder.setEmailComments(this.emailComments);

        dataHolder.setEmailFromAddress(this.emailFromAddress);

        dataHolder.setEmailAddress(this.emailAddress);

        dataHolder.setEditorTheme(this.editorTheme);

        dataHolder.setLocale(this.locale);

        dataHolder.setTimeZone(this.timeZone);

        dataHolder.setDateCreated(this.dateCreated);

        dataHolder.setDefaultPlugins(this.defaultPlugins);

        dataHolder.setUserCount(this.userCount);

        dataHolder.setAdminUserCount(this.adminUserCount);

        dataHolder.setEntryDisplayCount(this.entryDisplayCount);

        dataHolder.setEnabled(this.enabled);

        dataHolder.setActive(this.active);

        dataHolder.setCommentModerationRequired(this.commentModerationRequired);

        dataHolder.setLastModified(this.lastModified);

        dataHolder.setEnableMultiLang(this.enableMultiLang);

        dataHolder.setShowAllLangs(this.showAllLangs);

        dataHolder.setURL(this.URL);

        dataHolder.setAbsoluteURL(this.absoluteURL);

        dataHolder.setPageModels(this.pageModels);

        dataHolder.setTodaysHits(this.todaysHits);

    }

    /**
     * Copy values from specified data object to this form bean.
     * Includes all types.
     */
    public void copyFrom(org.apache.roller.pojos.WebsiteData dataHolder, Locale locale) throws RollerException
    {

        this.id = dataHolder.getId();

        this.handle = dataHolder.getHandle();

        this.name = dataHolder.getName();

        this.description = dataHolder.getDescription();

        this.defaultPageId = dataHolder.getDefaultPageId();

        this.weblogDayPageId = dataHolder.getWeblogDayPageId();

        this.enableBloggerApi = dataHolder.getEnableBloggerApi();

        this.editorPage = dataHolder.getEditorPage();

        this.blacklist = dataHolder.getBlacklist();

        this.allowComments = dataHolder.getAllowComments();

        this.defaultAllowComments = dataHolder.getDefaultAllowComments();

        this.defaultCommentDays = dataHolder.getDefaultCommentDays();

        this.moderateComments = dataHolder.getModerateComments();

        this.emailComments = dataHolder.getEmailComments();

        this.emailFromAddress = dataHolder.getEmailFromAddress();

        this.emailAddress = dataHolder.getEmailAddress();

        this.editorTheme = dataHolder.getEditorTheme();

        this.locale = dataHolder.getLocale();

        this.timeZone = dataHolder.getTimeZone();

        this.dateCreated = dataHolder.getDateCreated();

        this.defaultPlugins = dataHolder.getDefaultPlugins();

        this.userCount = dataHolder.getUserCount();

        this.adminUserCount = dataHolder.getAdminUserCount();

        this.entryDisplayCount = dataHolder.getEntryDisplayCount();

        this.enabled = dataHolder.getEnabled();

        this.active = dataHolder.getActive();

        this.commentModerationRequired = dataHolder.getCommentModerationRequired();

        this.lastModified = dataHolder.getLastModified();

        this.enableMultiLang = dataHolder.isEnableMultiLang();

        this.showAllLangs = dataHolder.isShowAllLangs();

        this.URL = dataHolder.getURL();

        this.absoluteURL = dataHolder.getAbsoluteURL();

        this.pageModels = dataHolder.getPageModels();

        this.todaysHits = dataHolder.getTodaysHits();

    }

    public void doReset(
    	org.apache.struts.action.ActionMapping mapping, 
    	javax.servlet.ServletRequest request)
    {

        this.id = null;

        this.handle = null;

        this.name = null;

        this.description = null;

        this.defaultPageId = null;

        this.weblogDayPageId = null;

        this.enableBloggerApi = null;

        this.editorPage = null;

        this.blacklist = null;

        this.allowComments = null;

        this.defaultAllowComments = null;

        this.defaultCommentDays = 0;

        this.moderateComments = null;

        this.emailComments = null;

        this.emailFromAddress = null;

        this.emailAddress = null;

        this.editorTheme = null;

        this.locale = null;

        this.timeZone = null;

        this.dateCreated = null;

        this.defaultPlugins = null;

        this.userCount = 0;

        this.adminUserCount = 0;

        this.entryDisplayCount = 0;

        this.enabled = null;

        this.active = null;

        this.commentModerationRequired = false;

        this.lastModified = null;

        this.enableMultiLang = false;

        this.showAllLangs = false;

        this.URL = null;

        this.absoluteURL = null;

        this.pageModels = null;

        this.todaysHits = 0;

    }
    public void reset(
    	org.apache.struts.action.ActionMapping mapping, 
    	javax.servlet.ServletRequest request)
    {
        doReset(mapping, request);
    }
    public void reset(
    	org.apache.struts.action.ActionMapping mapping, 
    	javax.servlet.http.HttpServletRequest request)
    {
        doReset(mapping, request);
    }
}
