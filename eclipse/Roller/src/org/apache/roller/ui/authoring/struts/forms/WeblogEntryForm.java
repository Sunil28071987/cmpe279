package org.apache.roller.ui.authoring.struts.forms;

import org.apache.roller.RollerException;
import java.util.Locale;

/**
 * Generated by XDoclet/ejbdoclet/strutsform. This class can be further processed with XDoclet/webdoclet/strutsconfigxml and XDoclet/webdoclet/strutsvalidationxml.
 *
 * @struts.form name="weblogEntryForm"
 */
public class WeblogEntryForm
    extends    org.apache.struts.action.ActionForm
    implements java.io.Serializable
{
    protected java.lang.String id;
    protected org.apache.roller.pojos.WeblogCategoryData category;
    protected java.util.List categories;
    protected org.apache.roller.pojos.WebsiteData website;
    protected org.apache.roller.pojos.UserData creator;
    protected java.lang.String title;
    protected java.lang.String summary;
    protected java.lang.String text;
    protected java.lang.String contentType;
    protected java.lang.String contentSrc;
    protected java.lang.String anchor;
    protected java.util.Set entryAttributes;
    protected java.sql.Timestamp pubTime;
    protected java.sql.Timestamp updateTime;
    protected java.lang.String status;
    protected java.lang.String link;
    protected java.lang.String plugins;
    protected java.lang.Boolean allowComments;
    protected java.lang.Integer commentDays;
    protected java.lang.Boolean rightToLeft;
    protected java.lang.Boolean pinnedToMain;
    protected java.lang.String locale;
    protected boolean commentsStillAllowed;
    protected java.util.List comments;
    protected int commentCount;
    protected java.util.List referers;
    protected java.lang.String permalink;
    protected java.lang.String permaLink;
    protected java.lang.String commentsLink;
    protected java.lang.String displayTitle;
    protected java.lang.String rss09xDescription;
    protected java.util.List pluginsList;
    protected boolean draft;
    protected boolean pending;
    protected boolean published;
    protected java.lang.String transformedText;
    protected java.lang.String transformedSummary;
    protected java.lang.String displayContent;

    /** Default empty constructor. */
    public WeblogEntryForm() {}

    /** Constructor that takes the data object as argument. */
    public WeblogEntryForm(org.apache.roller.pojos.WeblogEntryData dataHolder, java.util.Locale locale) throws RollerException
    {
       copyFrom(dataHolder, locale);
    }

    public java.lang.String getId()
    {
        return this.id;
    }

   /** 
    */
    public void setId( java.lang.String id )
    {
        this.id = id;
    }

    public org.apache.roller.pojos.WeblogCategoryData getCategory()
    {
        return this.category;
    }

   /** 
    */
    public void setCategory( org.apache.roller.pojos.WeblogCategoryData category )
    {
        this.category = category;
    }

    public java.util.List getCategories()
    {
        return this.categories;
    }

   /** 
    */
    public void setCategories( java.util.List categories )
    {
        this.categories = categories;
    }

    public org.apache.roller.pojos.WebsiteData getWebsite()
    {
        return this.website;
    }

   /** 
    */
    public void setWebsite( org.apache.roller.pojos.WebsiteData website )
    {
        this.website = website;
    }

    public org.apache.roller.pojos.UserData getCreator()
    {
        return this.creator;
    }

   /** 
    */
    public void setCreator( org.apache.roller.pojos.UserData creator )
    {
        this.creator = creator;
    }

    public java.lang.String getTitle()
    {
        return this.title;
    }

   /** 
    */
    public void setTitle( java.lang.String title )
    {
        this.title = title;
    }

    public java.lang.String getSummary()
    {
        return this.summary;
    }

   /** 
    */
    public void setSummary( java.lang.String summary )
    {
        this.summary = summary;
    }

    public java.lang.String getText()
    {
        return this.text;
    }

   /** 
    */
    public void setText( java.lang.String text )
    {
        this.text = text;
    }

    public java.lang.String getContentType()
    {
        return this.contentType;
    }

   /** 
    */
    public void setContentType( java.lang.String contentType )
    {
        this.contentType = contentType;
    }

    public java.lang.String getContentSrc()
    {
        return this.contentSrc;
    }

   /** 
    */
    public void setContentSrc( java.lang.String contentSrc )
    {
        this.contentSrc = contentSrc;
    }

    public java.lang.String getAnchor()
    {
        return this.anchor;
    }

   /** 
    */
    public void setAnchor( java.lang.String anchor )
    {
        this.anchor = anchor;
    }

    public java.util.Set getEntryAttributes()
    {
        return this.entryAttributes;
    }

   /** 
    */
    public void setEntryAttributes( java.util.Set entryAttributes )
    {
        this.entryAttributes = entryAttributes;
    }

    public java.sql.Timestamp getPubTime()
    {
        return this.pubTime;
    }

   /** 
    */
    public void setPubTime( java.sql.Timestamp pubTime )
    {
        this.pubTime = pubTime;
    }

    public java.sql.Timestamp getUpdateTime()
    {
        return this.updateTime;
    }

   /** 
    */
    public void setUpdateTime( java.sql.Timestamp updateTime )
    {
        this.updateTime = updateTime;
    }

    public java.lang.String getStatus()
    {
        return this.status;
    }

   /** 
    */
    public void setStatus( java.lang.String status )
    {
        this.status = status;
    }

    public java.lang.String getLink()
    {
        return this.link;
    }

   /** 
    */
    public void setLink( java.lang.String link )
    {
        this.link = link;
    }

    public java.lang.String getPlugins()
    {
        return this.plugins;
    }

   /** 
    */
    public void setPlugins( java.lang.String plugins )
    {
        this.plugins = plugins;
    }

    public java.lang.Boolean getAllowComments()
    {
        return this.allowComments;
    }

   /** 
    */
    public void setAllowComments( java.lang.Boolean allowComments )
    {
        this.allowComments = allowComments;
    }

    public java.lang.Integer getCommentDays()
    {
        return this.commentDays;
    }

   /** 
    */
    public void setCommentDays( java.lang.Integer commentDays )
    {
        this.commentDays = commentDays;
    }

    public java.lang.Boolean getRightToLeft()
    {
        return this.rightToLeft;
    }

   /** 
    */
    public void setRightToLeft( java.lang.Boolean rightToLeft )
    {
        this.rightToLeft = rightToLeft;
    }

    public java.lang.Boolean getPinnedToMain()
    {
        return this.pinnedToMain;
    }

   /** 
    */
    public void setPinnedToMain( java.lang.Boolean pinnedToMain )
    {
        this.pinnedToMain = pinnedToMain;
    }

    public java.lang.String getLocale()
    {
        return this.locale;
    }

   /** 
    */
    public void setLocale( java.lang.String locale )
    {
        this.locale = locale;
    }

    public boolean getCommentsStillAllowed()
    {
        return this.commentsStillAllowed;
    }

   /** 
    */
    public void setCommentsStillAllowed( boolean commentsStillAllowed )
    {
        this.commentsStillAllowed = commentsStillAllowed;
    }

    public java.util.List getComments()
    {
        return this.comments;
    }

   /** 
    */
    public void setComments( java.util.List comments )
    {
        this.comments = comments;
    }

    public int getCommentCount()
    {
        return this.commentCount;
    }

   /** 
    */
    public void setCommentCount( int commentCount )
    {
        this.commentCount = commentCount;
    }

    public java.util.List getReferers()
    {
        return this.referers;
    }

   /** 
    */
    public void setReferers( java.util.List referers )
    {
        this.referers = referers;
    }

    public java.lang.String getPermalink()
    {
        return this.permalink;
    }

   /** 
    */
    public void setPermalink( java.lang.String permalink )
    {
        this.permalink = permalink;
    }

    public java.lang.String getPermaLink()
    {
        return this.permaLink;
    }

   /** 
    */
    public void setPermaLink( java.lang.String permaLink )
    {
        this.permaLink = permaLink;
    }

    public java.lang.String getCommentsLink()
    {
        return this.commentsLink;
    }

   /** 
    */
    public void setCommentsLink( java.lang.String commentsLink )
    {
        this.commentsLink = commentsLink;
    }

    public java.lang.String getDisplayTitle()
    {
        return this.displayTitle;
    }

   /** 
    */
    public void setDisplayTitle( java.lang.String displayTitle )
    {
        this.displayTitle = displayTitle;
    }

    public java.lang.String getRss09xDescription()
    {
        return this.rss09xDescription;
    }

   /** 
    */
    public void setRss09xDescription( java.lang.String rss09xDescription )
    {
        this.rss09xDescription = rss09xDescription;
    }

    public java.util.List getPluginsList()
    {
        return this.pluginsList;
    }

   /** 
    */
    public void setPluginsList( java.util.List pluginsList )
    {
        this.pluginsList = pluginsList;
    }

    public boolean isDraft()
    {
        return this.draft;
    }

   /** 
    */
    public void setDraft( boolean draft )
    {
        this.draft = draft;
    }

    public boolean isPending()
    {
        return this.pending;
    }

   /** 
    */
    public void setPending( boolean pending )
    {
        this.pending = pending;
    }

    public boolean isPublished()
    {
        return this.published;
    }

   /** 
    */
    public void setPublished( boolean published )
    {
        this.published = published;
    }

    public java.lang.String getTransformedText()
    {
        return this.transformedText;
    }

   /** 
    */
    public void setTransformedText( java.lang.String transformedText )
    {
        this.transformedText = transformedText;
    }

    public java.lang.String getTransformedSummary()
    {
        return this.transformedSummary;
    }

   /** 
    */
    public void setTransformedSummary( java.lang.String transformedSummary )
    {
        this.transformedSummary = transformedSummary;
    }

    public java.lang.String getDisplayContent()
    {
        return this.displayContent;
    }

   /** 
    */
    public void setDisplayContent( java.lang.String displayContent )
    {
        this.displayContent = displayContent;
    }

    /**
     * Copy values from this form bean to the specified data object.
     * Only copies primitive types (Boolean, boolean, String, Integer, int, Timestamp, Date)
     */
    public void copyTo(org.apache.roller.pojos.WeblogEntryData dataHolder, Locale locale) throws RollerException
    {

        dataHolder.setId(this.id);

        dataHolder.setTitle(this.title);

        dataHolder.setSummary(this.summary);

        dataHolder.setText(this.text);

        dataHolder.setContentType(this.contentType);

        dataHolder.setContentSrc(this.contentSrc);

        dataHolder.setAnchor(this.anchor);

        dataHolder.setPubTime(this.pubTime);

        dataHolder.setUpdateTime(this.updateTime);

        dataHolder.setStatus(this.status);

        dataHolder.setLink(this.link);

        dataHolder.setPlugins(this.plugins);

        dataHolder.setAllowComments(this.allowComments);

        dataHolder.setCommentDays(this.commentDays);

        dataHolder.setRightToLeft(this.rightToLeft);

        dataHolder.setPinnedToMain(this.pinnedToMain);

        dataHolder.setLocale(this.locale);

        dataHolder.setCommentsStillAllowed(this.commentsStillAllowed);

        dataHolder.setCommentCount(this.commentCount);

        dataHolder.setPermalink(this.permalink);

        dataHolder.setPermaLink(this.permaLink);

        dataHolder.setCommentsLink(this.commentsLink);

        dataHolder.setDisplayTitle(this.displayTitle);

        dataHolder.setRss09xDescription(this.rss09xDescription);

        dataHolder.setDraft(this.draft);

        dataHolder.setPending(this.pending);

        dataHolder.setPublished(this.published);

        dataHolder.setTransformedText(this.transformedText);

        dataHolder.setTransformedSummary(this.transformedSummary);

        dataHolder.setDisplayContent(this.displayContent);

    }

    /**
     * Copy values from specified data object to this form bean.
     * Includes all types.
     */
    public void copyFrom(org.apache.roller.pojos.WeblogEntryData dataHolder, Locale locale) throws RollerException
    {

        this.id = dataHolder.getId();

        this.title = dataHolder.getTitle();

        this.summary = dataHolder.getSummary();

        this.text = dataHolder.getText();

        this.contentType = dataHolder.getContentType();

        this.contentSrc = dataHolder.getContentSrc();

        this.anchor = dataHolder.getAnchor();

        this.pubTime = dataHolder.getPubTime();

        this.updateTime = dataHolder.getUpdateTime();

        this.status = dataHolder.getStatus();

        this.link = dataHolder.getLink();

        this.plugins = dataHolder.getPlugins();

        this.allowComments = dataHolder.getAllowComments();

        this.commentDays = dataHolder.getCommentDays();

        this.rightToLeft = dataHolder.getRightToLeft();

        this.pinnedToMain = dataHolder.getPinnedToMain();

        this.locale = dataHolder.getLocale();

        this.commentsStillAllowed = dataHolder.getCommentsStillAllowed();

        this.commentCount = dataHolder.getCommentCount();

        this.permalink = dataHolder.getPermalink();

        this.permaLink = dataHolder.getPermaLink();

        this.commentsLink = dataHolder.getCommentsLink();

        this.displayTitle = dataHolder.getDisplayTitle();

        this.rss09xDescription = dataHolder.getRss09xDescription();

        this.draft = dataHolder.isDraft();

        this.pending = dataHolder.isPending();

        this.published = dataHolder.isPublished();

        this.transformedText = dataHolder.getTransformedText();

        this.transformedSummary = dataHolder.getTransformedSummary();

        this.displayContent = dataHolder.getDisplayContent();

    }

    public void doReset(
    	org.apache.struts.action.ActionMapping mapping, 
    	javax.servlet.ServletRequest request)
    {

        this.id = null;

        this.title = null;

        this.summary = null;

        this.text = null;

        this.contentType = null;

        this.contentSrc = null;

        this.anchor = null;

        this.pubTime = null;

        this.updateTime = null;

        this.status = null;

        this.link = null;

        this.plugins = null;

        this.allowComments = null;

        this.commentDays = null;

        this.rightToLeft = null;

        this.pinnedToMain = null;

        this.locale = null;

        this.commentsStillAllowed = false;

        this.commentCount = 0;

        this.permalink = null;

        this.permaLink = null;

        this.commentsLink = null;

        this.displayTitle = null;

        this.rss09xDescription = null;

        this.draft = false;

        this.pending = false;

        this.published = false;

        this.transformedText = null;

        this.transformedSummary = null;

        this.displayContent = null;

    }
    public void reset(
    	org.apache.struts.action.ActionMapping mapping, 
    	javax.servlet.ServletRequest request)
    {
        doReset(mapping, request);
    }
    public void reset(
    	org.apache.struts.action.ActionMapping mapping, 
    	javax.servlet.http.HttpServletRequest request)
    {
        doReset(mapping, request);
    }
}
