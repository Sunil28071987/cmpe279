
get_shell_2.out:     file format elf32-i386


Disassembly of section .interp:

08048134 <.interp>:
 8048134:	2f                   	das    
 8048135:	6c                   	ins    BYTE PTR es:[edi],dx
 8048136:	69 62 2f 6c 64 2d 6c 	imul   esp,DWORD PTR [edx+0x2f],0x6c2d646c
 804813d:	69 6e 75 78 2e 73 6f 	imul   ebp,DWORD PTR [esi+0x75],0x6f732e78
 8048144:	2e 32 00             	xor    al,BYTE PTR cs:[eax]

Disassembly of section .note.ABI-tag:

08048148 <.note.ABI-tag>:
 8048148:	04 00                	add    al,0x0
 804814a:	00 00                	add    BYTE PTR [eax],al
 804814c:	10 00                	adc    BYTE PTR [eax],al
 804814e:	00 00                	add    BYTE PTR [eax],al
 8048150:	01 00                	add    DWORD PTR [eax],eax
 8048152:	00 00                	add    BYTE PTR [eax],al
 8048154:	47                   	inc    edi
 8048155:	4e                   	dec    esi
 8048156:	55                   	push   ebp
 8048157:	00 00                	add    BYTE PTR [eax],al
 8048159:	00 00                	add    BYTE PTR [eax],al
 804815b:	00 02                	add    BYTE PTR [edx],al
 804815d:	00 00                	add    BYTE PTR [eax],al
 804815f:	00 06                	add    BYTE PTR [esi],al
 8048161:	00 00                	add    BYTE PTR [eax],al
 8048163:	00 0f                	add    BYTE PTR [edi],cl
 8048165:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .hash:

08048168 <.hash>:
 8048168:	03 00                	add    eax,DWORD PTR [eax]
 804816a:	00 00                	add    BYTE PTR [eax],al
 804816c:	04 00                	add    al,0x0
 804816e:	00 00                	add    BYTE PTR [eax],al
 8048170:	01 00                	add    DWORD PTR [eax],eax
 8048172:	00 00                	add    BYTE PTR [eax],al
 8048174:	02 00                	add    al,BYTE PTR [eax]
 8048176:	00 00                	add    BYTE PTR [eax],al
 8048178:	03 00                	add    eax,DWORD PTR [eax]
	...

Disassembly of section .gnu.hash:

0804818c <.gnu.hash>:
 804818c:	02 00                	add    al,BYTE PTR [eax]
 804818e:	00 00                	add    BYTE PTR [eax],al
 8048190:	03 00                	add    eax,DWORD PTR [eax]
 8048192:	00 00                	add    BYTE PTR [eax],al
 8048194:	01 00                	add    DWORD PTR [eax],eax
 8048196:	00 00                	add    BYTE PTR [eax],al
 8048198:	05 00 00 00 00       	add    eax,0x0
 804819d:	20 00                	and    BYTE PTR [eax],al
 804819f:	20 00                	and    BYTE PTR [eax],al
 80481a1:	00 00                	add    BYTE PTR [eax],al
 80481a3:	00 03                	add    BYTE PTR [ebx],al
 80481a5:	00 00                	add    BYTE PTR [eax],al
 80481a7:	00                   	.byte 0x0
 80481a8:	ad                   	lods   eax,DWORD PTR ds:[esi]
 80481a9:	4b                   	dec    ebx
 80481aa:	e3 c0                	jecxz  804816c <_init-0x108>

Disassembly of section .dynsym:

080481ac <.dynsym>:
	...
 80481bc:	01 00                	add    DWORD PTR [eax],eax
	...
 80481c6:	00 00                	add    BYTE PTR [eax],al
 80481c8:	20 00                	and    BYTE PTR [eax],al
 80481ca:	00 00                	add    BYTE PTR [eax],al
 80481cc:	29 00                	sub    DWORD PTR [eax],eax
	...
 80481d6:	00 00                	add    BYTE PTR [eax],al
 80481d8:	12 00                	adc    al,BYTE PTR [eax]
 80481da:	00 00                	add    BYTE PTR [eax],al
 80481dc:	1a 00                	sbb    al,BYTE PTR [eax]
 80481de:	00 00                	add    BYTE PTR [eax],al
 80481e0:	8c 84 04 08 04 00 00 	mov    WORD PTR [esp+eax*1+0x408],es
 80481e7:	00 11                	add    BYTE PTR [ecx],dl
 80481e9:	00 0f                	add    BYTE PTR [edi],cl
	...

Disassembly of section .dynstr:

080481ec <.dynstr>:
 80481ec:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
 80481ef:	67 6d                	addr16 ins DWORD PTR es:[di],dx
 80481f1:	6f                   	outs   dx,DWORD PTR ds:[esi]
 80481f2:	6e                   	outs   dx,BYTE PTR ds:[esi]
 80481f3:	5f                   	pop    edi
 80481f4:	73 74                	jae    804826a <_init-0xa>
 80481f6:	61                   	popa   
 80481f7:	72 74                	jb     804826d <_init-0x7>
 80481f9:	5f                   	pop    edi
 80481fa:	5f                   	pop    edi
 80481fb:	00 6c 69 62          	add    BYTE PTR [ecx+ebp*2+0x62],ch
 80481ff:	63 2e                	arpl   WORD PTR [esi],bp
 8048201:	73 6f                	jae    8048272 <_init-0x2>
 8048203:	2e 36 00 5f 49       	add    BYTE PTR cs:ss:[edi+0x49],bl
 8048208:	4f                   	dec    edi
 8048209:	5f                   	pop    edi
 804820a:	73 74                	jae    8048280 <_init+0xc>
 804820c:	64 69 6e 5f 75 73 65 	imul   ebp,DWORD PTR fs:[esi+0x5f],0x64657375
 8048213:	64 
 8048214:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
 8048217:	6c                   	ins    BYTE PTR es:[edi],dx
 8048218:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [edx+0x63],0x6174735f
 804821f:	72 74                	jb     8048295 <_init+0x21>
 8048221:	5f                   	pop    edi
 8048222:	6d                   	ins    DWORD PTR es:[edi],dx
 8048223:	61                   	popa   
 8048224:	69 6e 00 47 4c 49 42 	imul   ebp,DWORD PTR [esi+0x0],0x42494c47
 804822b:	43                   	inc    ebx
 804822c:	5f                   	pop    edi
 804822d:	32 2e                	xor    ch,BYTE PTR [esi]
 804822f:	30 00                	xor    BYTE PTR [eax],al

Disassembly of section .gnu.version:

08048232 <.gnu.version>:
 8048232:	00 00                	add    BYTE PTR [eax],al
 8048234:	00 00                	add    BYTE PTR [eax],al
 8048236:	02 00                	add    al,BYTE PTR [eax]
 8048238:	01 00                	add    DWORD PTR [eax],eax

Disassembly of section .gnu.version_r:

0804823c <.gnu.version_r>:
 804823c:	01 00                	add    DWORD PTR [eax],eax
 804823e:	01 00                	add    DWORD PTR [eax],eax
 8048240:	10 00                	adc    BYTE PTR [eax],al
 8048242:	00 00                	add    BYTE PTR [eax],al
 8048244:	10 00                	adc    BYTE PTR [eax],al
 8048246:	00 00                	add    BYTE PTR [eax],al
 8048248:	00 00                	add    BYTE PTR [eax],al
 804824a:	00 00                	add    BYTE PTR [eax],al
 804824c:	10 69 69             	adc    BYTE PTR [ecx+0x69],ch
 804824f:	0d 00 00 02 00       	or     eax,0x20000
 8048254:	3b 00                	cmp    eax,DWORD PTR [eax]
 8048256:	00 00                	add    BYTE PTR [eax],al
 8048258:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .rel.dyn:

0804825c <.rel.dyn>:
 804825c:	f0 9f                	lock lahf 
 804825e:	04 08                	add    al,0x8
 8048260:	06                   	push   es
 8048261:	01 00                	add    DWORD PTR [eax],eax
	...

Disassembly of section .rel.plt:

08048264 <.rel.plt>:
 8048264:	00 a0 04 08 07 01    	add    BYTE PTR [eax+0x1070804],ah
 804826a:	00 00                	add    BYTE PTR [eax],al
 804826c:	04 a0                	add    al,0xa0
 804826e:	04 08                	add    al,0x8
 8048270:	07                   	pop    es
 8048271:	02 00                	add    al,BYTE PTR [eax]
	...

Disassembly of section .init:

08048274 <_init>:
 8048274:	55                   	push   ebp
 8048275:	89 e5                	mov    ebp,esp
 8048277:	53                   	push   ebx
 8048278:	83 ec 04             	sub    esp,0x4
 804827b:	e8 00 00 00 00       	call   8048280 <_init+0xc>
 8048280:	5b                   	pop    ebx
 8048281:	81 c3 74 1d 00 00    	add    ebx,0x1d74
 8048287:	8b 93 fc ff ff ff    	mov    edx,DWORD PTR [ebx-0x4]
 804828d:	85 d2                	test   edx,edx
 804828f:	74 05                	je     8048296 <_init+0x22>
 8048291:	e8 1e 00 00 00       	call   80482b4 <__gmon_start__@plt>
 8048296:	e8 d5 00 00 00       	call   8048370 <frame_dummy>
 804829b:	e8 a0 01 00 00       	call   8048440 <__do_global_ctors_aux>
 80482a0:	58                   	pop    eax
 80482a1:	5b                   	pop    ebx
 80482a2:	c9                   	leave  
 80482a3:	c3                   	ret    

Disassembly of section .plt:

080482a4 <__gmon_start__@plt-0x10>:
 80482a4:	ff 35 f8 9f 04 08    	push   DWORD PTR ds:0x8049ff8
 80482aa:	ff 25 fc 9f 04 08    	jmp    DWORD PTR ds:0x8049ffc
 80482b0:	00 00                	add    BYTE PTR [eax],al
	...

080482b4 <__gmon_start__@plt>:
 80482b4:	ff 25 00 a0 04 08    	jmp    DWORD PTR ds:0x804a000
 80482ba:	68 00 00 00 00       	push   0x0
 80482bf:	e9 e0 ff ff ff       	jmp    80482a4 <_init+0x30>

080482c4 <__libc_start_main@plt>:
 80482c4:	ff 25 04 a0 04 08    	jmp    DWORD PTR ds:0x804a004
 80482ca:	68 08 00 00 00       	push   0x8
 80482cf:	e9 d0 ff ff ff       	jmp    80482a4 <_init+0x30>

Disassembly of section .text:

080482e0 <_start>:
 80482e0:	31 ed                	xor    ebp,ebp
 80482e2:	5e                   	pop    esi
 80482e3:	89 e1                	mov    ecx,esp
 80482e5:	83 e4 f0             	and    esp,0xfffffff0
 80482e8:	50                   	push   eax
 80482e9:	54                   	push   esp
 80482ea:	52                   	push   edx
 80482eb:	68 d0 83 04 08       	push   0x80483d0
 80482f0:	68 e0 83 04 08       	push   0x80483e0
 80482f5:	51                   	push   ecx
 80482f6:	56                   	push   esi
 80482f7:	68 94 83 04 08       	push   0x8048394
 80482fc:	e8 c3 ff ff ff       	call   80482c4 <__libc_start_main@plt>
 8048301:	f4                   	hlt    
 8048302:	90                   	nop    
 8048303:	90                   	nop    
 8048304:	90                   	nop    
 8048305:	90                   	nop    
 8048306:	90                   	nop    
 8048307:	90                   	nop    
 8048308:	90                   	nop    
 8048309:	90                   	nop    
 804830a:	90                   	nop    
 804830b:	90                   	nop    
 804830c:	90                   	nop    
 804830d:	90                   	nop    
 804830e:	90                   	nop    
 804830f:	90                   	nop    

08048310 <__do_global_dtors_aux>:
 8048310:	55                   	push   ebp
 8048311:	89 e5                	mov    ebp,esp
 8048313:	53                   	push   ebx
 8048314:	83 ec 04             	sub    esp,0x4
 8048317:	80 3d 68 a0 04 08 00 	cmp    BYTE PTR ds:0x804a068,0x0
 804831e:	75 40                	jne    8048360 <__do_global_dtors_aux+0x50>
 8048320:	8b 15 6c a0 04 08    	mov    edx,DWORD PTR ds:0x804a06c
 8048326:	b8 18 9f 04 08       	mov    eax,0x8049f18
 804832b:	2d 14 9f 04 08       	sub    eax,0x8049f14
 8048330:	c1 f8 02             	sar    eax,0x2
 8048333:	8d 58 ff             	lea    ebx,[eax-0x1]
 8048336:	39 da                	cmp    edx,ebx
 8048338:	73 1f                	jae    8048359 <__do_global_dtors_aux+0x49>
 804833a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 8048340:	8d 42 01             	lea    eax,[edx+0x1]
 8048343:	a3 6c a0 04 08       	mov    ds:0x804a06c,eax
 8048348:	ff 14 85 14 9f 04 08 	call   DWORD PTR [eax*4+0x8049f14]
 804834f:	8b 15 6c a0 04 08    	mov    edx,DWORD PTR ds:0x804a06c
 8048355:	39 da                	cmp    edx,ebx
 8048357:	72 e7                	jb     8048340 <__do_global_dtors_aux+0x30>
 8048359:	c6 05 68 a0 04 08 01 	mov    BYTE PTR ds:0x804a068,0x1
 8048360:	83 c4 04             	add    esp,0x4
 8048363:	5b                   	pop    ebx
 8048364:	5d                   	pop    ebp
 8048365:	c3                   	ret    
 8048366:	8d 76 00             	lea    esi,[esi+0x0]
 8048369:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

08048370 <frame_dummy>:
 8048370:	55                   	push   ebp
 8048371:	89 e5                	mov    ebp,esp
 8048373:	83 ec 08             	sub    esp,0x8
 8048376:	a1 1c 9f 04 08       	mov    eax,ds:0x8049f1c
 804837b:	85 c0                	test   eax,eax
 804837d:	74 12                	je     8048391 <frame_dummy+0x21>
 804837f:	b8 00 00 00 00       	mov    eax,0x0
 8048384:	85 c0                	test   eax,eax
 8048386:	74 09                	je     8048391 <frame_dummy+0x21>
 8048388:	c7 04 24 1c 9f 04 08 	mov    DWORD PTR [esp],0x8049f1c
 804838f:	ff d0                	call   eax
 8048391:	c9                   	leave  
 8048392:	c3                   	ret    
 8048393:	90                   	nop    

08048394 <main>:
 8048394:	8d 4c 24 04          	lea    ecx,[esp+0x4]
 8048398:	83 e4 f0             	and    esp,0xfffffff0
 804839b:	ff 71 fc             	push   DWORD PTR [ecx-0x4]
 804839e:	55                   	push   ebp
 804839f:	89 e5                	mov    ebp,esp
 80483a1:	51                   	push   ecx
 80483a2:	83 ec 14             	sub    esp,0x14
 80483a5:	8d 45 f8             	lea    eax,[ebp-0x8]
 80483a8:	83 c0 08             	add    eax,0x8
 80483ab:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
 80483ae:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
 80483b1:	b8 40 a0 04 08       	mov    eax,0x804a040
 80483b6:	89 02                	mov    DWORD PTR [edx],eax
 80483b8:	83 c4 14             	add    esp,0x14
 80483bb:	59                   	pop    ecx
 80483bc:	5d                   	pop    ebp
 80483bd:	8d 61 fc             	lea    esp,[ecx-0x4]
 80483c0:	c3                   	ret    
 80483c1:	90                   	nop    
 80483c2:	90                   	nop    
 80483c3:	90                   	nop    
 80483c4:	90                   	nop    
 80483c5:	90                   	nop    
 80483c6:	90                   	nop    
 80483c7:	90                   	nop    
 80483c8:	90                   	nop    
 80483c9:	90                   	nop    
 80483ca:	90                   	nop    
 80483cb:	90                   	nop    
 80483cc:	90                   	nop    
 80483cd:	90                   	nop    
 80483ce:	90                   	nop    
 80483cf:	90                   	nop    

080483d0 <__libc_csu_fini>:
 80483d0:	55                   	push   ebp
 80483d1:	89 e5                	mov    ebp,esp
 80483d3:	5d                   	pop    ebp
 80483d4:	c3                   	ret    
 80483d5:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 80483d9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

080483e0 <__libc_csu_init>:
 80483e0:	55                   	push   ebp
 80483e1:	89 e5                	mov    ebp,esp
 80483e3:	57                   	push   edi
 80483e4:	56                   	push   esi
 80483e5:	53                   	push   ebx
 80483e6:	e8 4f 00 00 00       	call   804843a <__i686.get_pc_thunk.bx>
 80483eb:	81 c3 09 1c 00 00    	add    ebx,0x1c09
 80483f1:	83 ec 0c             	sub    esp,0xc
 80483f4:	e8 7b fe ff ff       	call   8048274 <_init>
 80483f9:	8d bb 18 ff ff ff    	lea    edi,[ebx-0xe8]
 80483ff:	8d 83 18 ff ff ff    	lea    eax,[ebx-0xe8]
 8048405:	29 c7                	sub    edi,eax
 8048407:	c1 ff 02             	sar    edi,0x2
 804840a:	85 ff                	test   edi,edi
 804840c:	74 24                	je     8048432 <__libc_csu_init+0x52>
 804840e:	31 f6                	xor    esi,esi
 8048410:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
 8048413:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
 8048417:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
 804841a:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 804841e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 8048421:	89 04 24             	mov    DWORD PTR [esp],eax
 8048424:	ff 94 b3 18 ff ff ff 	call   DWORD PTR [ebx+esi*4-0xe8]
 804842b:	83 c6 01             	add    esi,0x1
 804842e:	39 fe                	cmp    esi,edi
 8048430:	72 de                	jb     8048410 <__libc_csu_init+0x30>
 8048432:	83 c4 0c             	add    esp,0xc
 8048435:	5b                   	pop    ebx
 8048436:	5e                   	pop    esi
 8048437:	5f                   	pop    edi
 8048438:	5d                   	pop    ebp
 8048439:	c3                   	ret    

0804843a <__i686.get_pc_thunk.bx>:
 804843a:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 804843d:	c3                   	ret    
 804843e:	90                   	nop    
 804843f:	90                   	nop    

08048440 <__do_global_ctors_aux>:
 8048440:	55                   	push   ebp
 8048441:	89 e5                	mov    ebp,esp
 8048443:	53                   	push   ebx
 8048444:	83 ec 04             	sub    esp,0x4
 8048447:	a1 0c 9f 04 08       	mov    eax,ds:0x8049f0c
 804844c:	83 f8 ff             	cmp    eax,0xffffffff
 804844f:	74 13                	je     8048464 <__do_global_ctors_aux+0x24>
 8048451:	bb 0c 9f 04 08       	mov    ebx,0x8049f0c
 8048456:	66 90                	xchg   ax,ax
 8048458:	83 eb 04             	sub    ebx,0x4
 804845b:	ff d0                	call   eax
 804845d:	8b 03                	mov    eax,DWORD PTR [ebx]
 804845f:	83 f8 ff             	cmp    eax,0xffffffff
 8048462:	75 f4                	jne    8048458 <__do_global_ctors_aux+0x18>
 8048464:	83 c4 04             	add    esp,0x4
 8048467:	5b                   	pop    ebx
 8048468:	5d                   	pop    ebp
 8048469:	c3                   	ret    
 804846a:	90                   	nop    
 804846b:	90                   	nop    

Disassembly of section .fini:

0804846c <_fini>:
 804846c:	55                   	push   ebp
 804846d:	89 e5                	mov    ebp,esp
 804846f:	53                   	push   ebx
 8048470:	83 ec 04             	sub    esp,0x4
 8048473:	e8 00 00 00 00       	call   8048478 <_fini+0xc>
 8048478:	5b                   	pop    ebx
 8048479:	81 c3 7c 1b 00 00    	add    ebx,0x1b7c
 804847f:	e8 8c fe ff ff       	call   8048310 <__do_global_dtors_aux>
 8048484:	59                   	pop    ecx
 8048485:	5b                   	pop    ebx
 8048486:	c9                   	leave  
 8048487:	c3                   	ret    

Disassembly of section .rodata:

08048488 <_fp_hw>:
 8048488:	03 00                	add    eax,DWORD PTR [eax]
	...

0804848c <_IO_stdin_used>:
 804848c:	01 00                	add    DWORD PTR [eax],eax
 804848e:	02 00                	add    al,BYTE PTR [eax]

Disassembly of section .eh_frame:

08048490 <__FRAME_END__>:
 8048490:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .ctors:

08049f0c <__CTOR_LIST__>:
 8049f0c:	ff                   	(bad)  
 8049f0d:	ff                   	(bad)  
 8049f0e:	ff                   	(bad)  
 8049f0f:	ff 00                	inc    DWORD PTR [eax]

08049f10 <__CTOR_END__>:
 8049f10:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .dtors:

08049f14 <__DTOR_LIST__>:
 8049f14:	ff                   	(bad)  
 8049f15:	ff                   	(bad)  
 8049f16:	ff                   	(bad)  
 8049f17:	ff 00                	inc    DWORD PTR [eax]

08049f18 <__DTOR_END__>:
 8049f18:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .jcr:

08049f1c <__JCR_END__>:
 8049f1c:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .dynamic:

08049f20 <_DYNAMIC>:
 8049f20:	01 00                	add    DWORD PTR [eax],eax
 8049f22:	00 00                	add    BYTE PTR [eax],al
 8049f24:	10 00                	adc    BYTE PTR [eax],al
 8049f26:	00 00                	add    BYTE PTR [eax],al
 8049f28:	0c 00                	or     al,0x0
 8049f2a:	00 00                	add    BYTE PTR [eax],al
 8049f2c:	74 82                	je     8049eb0 <__FRAME_END__+0x1a20>
 8049f2e:	04 08                	add    al,0x8
 8049f30:	0d 00 00 00 6c       	or     eax,0x6c000000
 8049f35:	84 04 08             	test   BYTE PTR [eax+ecx*1],al
 8049f38:	04 00                	add    al,0x0
 8049f3a:	00 00                	add    BYTE PTR [eax],al
 8049f3c:	68 81 04 08 f5       	push   0xf5080481
 8049f41:	fe                   	(bad)  
 8049f42:	ff 6f 8c             	jmp    FWORD PTR [edi-0x74]
 8049f45:	81 04 08 05 00 00 00 	add    DWORD PTR [eax+ecx*1],0x5
 8049f4c:	ec                   	in     al,dx
 8049f4d:	81 04 08 06 00 00 00 	add    DWORD PTR [eax+ecx*1],0x6
 8049f54:	ac                   	lods   al,BYTE PTR ds:[esi]
 8049f55:	81 04 08 0a 00 00 00 	add    DWORD PTR [eax+ecx*1],0xa
 8049f5c:	45                   	inc    ebp
 8049f5d:	00 00                	add    BYTE PTR [eax],al
 8049f5f:	00 0b                	add    BYTE PTR [ebx],cl
 8049f61:	00 00                	add    BYTE PTR [eax],al
 8049f63:	00 10                	add    BYTE PTR [eax],dl
 8049f65:	00 00                	add    BYTE PTR [eax],al
 8049f67:	00 15 00 00 00 00    	add    BYTE PTR ds:0x0,dl
 8049f6d:	00 00                	add    BYTE PTR [eax],al
 8049f6f:	00 03                	add    BYTE PTR [ebx],al
 8049f71:	00 00                	add    BYTE PTR [eax],al
 8049f73:	00 f4                	add    ah,dh
 8049f75:	9f                   	lahf   
 8049f76:	04 08                	add    al,0x8
 8049f78:	02 00                	add    al,BYTE PTR [eax]
 8049f7a:	00 00                	add    BYTE PTR [eax],al
 8049f7c:	10 00                	adc    BYTE PTR [eax],al
 8049f7e:	00 00                	add    BYTE PTR [eax],al
 8049f80:	14 00                	adc    al,0x0
 8049f82:	00 00                	add    BYTE PTR [eax],al
 8049f84:	11 00                	adc    DWORD PTR [eax],eax
 8049f86:	00 00                	add    BYTE PTR [eax],al
 8049f88:	17                   	pop    ss
 8049f89:	00 00                	add    BYTE PTR [eax],al
 8049f8b:	00 64 82 04          	add    BYTE PTR [edx+eax*4+0x4],ah
 8049f8f:	08 11                	or     BYTE PTR [ecx],dl
 8049f91:	00 00                	add    BYTE PTR [eax],al
 8049f93:	00 5c 82 04          	add    BYTE PTR [edx+eax*4+0x4],bl
 8049f97:	08 12                	or     BYTE PTR [edx],dl
 8049f99:	00 00                	add    BYTE PTR [eax],al
 8049f9b:	00 08                	add    BYTE PTR [eax],cl
 8049f9d:	00 00                	add    BYTE PTR [eax],al
 8049f9f:	00 13                	add    BYTE PTR [ebx],dl
 8049fa1:	00 00                	add    BYTE PTR [eax],al
 8049fa3:	00 08                	add    BYTE PTR [eax],cl
 8049fa5:	00 00                	add    BYTE PTR [eax],al
 8049fa7:	00 fe                	add    dh,bh
 8049fa9:	ff                   	(bad)  
 8049faa:	ff 6f 3c             	jmp    FWORD PTR [edi+0x3c]
 8049fad:	82                   	(bad)  
 8049fae:	04 08                	add    al,0x8
 8049fb0:	ff                   	(bad)  
 8049fb1:	ff                   	(bad)  
 8049fb2:	ff 6f 01             	jmp    FWORD PTR [edi+0x1]
 8049fb5:	00 00                	add    BYTE PTR [eax],al
 8049fb7:	00 f0                	add    al,dh
 8049fb9:	ff                   	(bad)  
 8049fba:	ff 6f 32             	jmp    FWORD PTR [edi+0x32]
 8049fbd:	82                   	(bad)  
 8049fbe:	04 08                	add    al,0x8
	...

Disassembly of section .got:

08049ff0 <.got>:
 8049ff0:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .got.plt:

08049ff4 <_GLOBAL_OFFSET_TABLE_>:
 8049ff4:	20 9f 04 08 00 00    	and    BYTE PTR [edi+0x804],bl
 8049ffa:	00 00                	add    BYTE PTR [eax],al
 8049ffc:	00 00                	add    BYTE PTR [eax],al
 8049ffe:	00 00                	add    BYTE PTR [eax],al
 804a000:	ba 82 04 08 ca       	mov    edx,0xca080482
 804a005:	82                   	(bad)  
 804a006:	04 08                	add    al,0x8

Disassembly of section .data:

0804a020 <__data_start>:
 804a020:	00 00                	add    BYTE PTR [eax],al
	...

0804a024 <__dso_handle>:
	...

0804a040 <shellcode>:
 804a040:	eb 18                	jmp    804a05a <shellcode+0x1a>
 804a042:	5e                   	pop    esi
 804a043:	31 c0                	xor    eax,eax
 804a045:	88 46 07             	mov    BYTE PTR [esi+0x7],al
 804a048:	89 76 08             	mov    DWORD PTR [esi+0x8],esi
 804a04b:	89 46 0c             	mov    DWORD PTR [esi+0xc],eax
 804a04e:	b0 0b                	mov    al,0xb
 804a050:	8d 1e                	lea    ebx,[esi]
 804a052:	8d 4e 08             	lea    ecx,[esi+0x8]
 804a055:	8d 56 0c             	lea    edx,[esi+0xc]
 804a058:	cd 80                	int    0x80
 804a05a:	e8 e3 ff ff ff       	call   804a042 <shellcode+0x2>
 804a05f:	2f                   	das    
 804a060:	62 69 6e             	bound  ebp,QWORD PTR [ecx+0x6e]
 804a063:	2f                   	das    
 804a064:	73 68                	jae    804a0ce <_end+0x5e>
	...

Disassembly of section .bss:

0804a068 <completed.6635>:
 804a068:	00 00                	add    BYTE PTR [eax],al
	...

0804a06c <dtor_idx.6637>:
 804a06c:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	00 47 43             	add    BYTE PTR [edi+0x43],al
   3:	43                   	inc    ebx
   4:	3a 20                	cmp    ah,BYTE PTR [eax]
   6:	28 55 62             	sub    BYTE PTR [ebp+0x62],dl
   9:	75 6e                	jne    79 <_init-0x80481fb>
   b:	74 75                	je     82 <_init-0x80481f2>
   d:	20 34 2e             	and    BYTE PTR [esi+ebp*1],dh
  10:	33 2e                	xor    ebp,DWORD PTR [esi]
  12:	33 2d 35 75 62 75    	xor    ebp,DWORD PTR ds:0x75627535
  18:	6e                   	outs   dx,BYTE PTR ds:[esi]
  19:	74 75                	je     90 <_init-0x80481e4>
  1b:	34 29                	xor    al,0x29
  1d:	20 34 2e             	and    BYTE PTR [esi+ebp*1],dh
  20:	33 2e                	xor    ebp,DWORD PTR [esi]
  22:	33 00                	xor    eax,DWORD PTR [eax]
  24:	00 47 43             	add    BYTE PTR [edi+0x43],al
  27:	43                   	inc    ebx
  28:	3a 20                	cmp    ah,BYTE PTR [eax]
  2a:	28 55 62             	sub    BYTE PTR [ebp+0x62],dl
  2d:	75 6e                	jne    9d <_init-0x80481d7>
  2f:	74 75                	je     a6 <_init-0x80481ce>
  31:	20 34 2e             	and    BYTE PTR [esi+ebp*1],dh
  34:	33 2e                	xor    ebp,DWORD PTR [esi]
  36:	33 2d 35 75 62 75    	xor    ebp,DWORD PTR ds:0x75627535
  3c:	6e                   	outs   dx,BYTE PTR ds:[esi]
  3d:	74 75                	je     b4 <_init-0x80481c0>
  3f:	34 29                	xor    al,0x29
  41:	20 34 2e             	and    BYTE PTR [esi+ebp*1],dh
  44:	33 2e                	xor    ebp,DWORD PTR [esi]
  46:	33 00                	xor    eax,DWORD PTR [eax]
  48:	00 47 43             	add    BYTE PTR [edi+0x43],al
  4b:	43                   	inc    ebx
  4c:	3a 20                	cmp    ah,BYTE PTR [eax]
  4e:	28 55 62             	sub    BYTE PTR [ebp+0x62],dl
  51:	75 6e                	jne    c1 <_init-0x80481b3>
  53:	74 75                	je     ca <_init-0x80481aa>
  55:	20 34 2e             	and    BYTE PTR [esi+ebp*1],dh
  58:	33 2e                	xor    ebp,DWORD PTR [esi]
  5a:	33 2d 35 75 62 75    	xor    ebp,DWORD PTR ds:0x75627535
  60:	6e                   	outs   dx,BYTE PTR ds:[esi]
  61:	74 75                	je     d8 <_init-0x804819c>
  63:	34 29                	xor    al,0x29
  65:	20 34 2e             	and    BYTE PTR [esi+ebp*1],dh
  68:	33 2e                	xor    ebp,DWORD PTR [esi]
  6a:	33 00                	xor    eax,DWORD PTR [eax]
  6c:	00 47 43             	add    BYTE PTR [edi+0x43],al
  6f:	43                   	inc    ebx
  70:	3a 20                	cmp    ah,BYTE PTR [eax]
  72:	28 55 62             	sub    BYTE PTR [ebp+0x62],dl
  75:	75 6e                	jne    e5 <_init-0x804818f>
  77:	74 75                	je     ee <_init-0x8048186>
  79:	20 34 2e             	and    BYTE PTR [esi+ebp*1],dh
  7c:	33 2e                	xor    ebp,DWORD PTR [esi]
  7e:	33 2d 35 75 62 75    	xor    ebp,DWORD PTR ds:0x75627535
  84:	6e                   	outs   dx,BYTE PTR ds:[esi]
  85:	74 75                	je     fc <_init-0x8048178>
  87:	34 29                	xor    al,0x29
  89:	20 34 2e             	and    BYTE PTR [esi+ebp*1],dh
  8c:	33 2e                	xor    ebp,DWORD PTR [esi]
  8e:	33 00                	xor    eax,DWORD PTR [eax]
  90:	00 47 43             	add    BYTE PTR [edi+0x43],al
  93:	43                   	inc    ebx
  94:	3a 20                	cmp    ah,BYTE PTR [eax]
  96:	28 55 62             	sub    BYTE PTR [ebp+0x62],dl
  99:	75 6e                	jne    109 <_init-0x804816b>
  9b:	74 75                	je     112 <_init-0x8048162>
  9d:	20 34 2e             	and    BYTE PTR [esi+ebp*1],dh
  a0:	33 2e                	xor    ebp,DWORD PTR [esi]
  a2:	33 2d 35 75 62 75    	xor    ebp,DWORD PTR ds:0x75627535
  a8:	6e                   	outs   dx,BYTE PTR ds:[esi]
  a9:	74 75                	je     120 <_init-0x8048154>
  ab:	34 29                	xor    al,0x29
  ad:	20 34 2e             	and    BYTE PTR [esi+ebp*1],dh
  b0:	33 2e                	xor    ebp,DWORD PTR [esi]
  b2:	33 00                	xor    eax,DWORD PTR [eax]
  b4:	00 47 43             	add    BYTE PTR [edi+0x43],al
  b7:	43                   	inc    ebx
  b8:	3a 20                	cmp    ah,BYTE PTR [eax]
  ba:	28 55 62             	sub    BYTE PTR [ebp+0x62],dl
  bd:	75 6e                	jne    12d <_init-0x8048147>
  bf:	74 75                	je     136 <_init-0x804813e>
  c1:	20 34 2e             	and    BYTE PTR [esi+ebp*1],dh
  c4:	33 2e                	xor    ebp,DWORD PTR [esi]
  c6:	33 2d 35 75 62 75    	xor    ebp,DWORD PTR ds:0x75627535
  cc:	6e                   	outs   dx,BYTE PTR ds:[esi]
  cd:	74 75                	je     144 <_init-0x8048130>
  cf:	34 29                	xor    al,0x29
  d1:	20 34 2e             	and    BYTE PTR [esi+ebp*1],dh
  d4:	33 2e                	xor    ebp,DWORD PTR [esi]
  d6:	33 00                	xor    eax,DWORD PTR [eax]
  d8:	00 47 43             	add    BYTE PTR [edi+0x43],al
  db:	43                   	inc    ebx
  dc:	3a 20                	cmp    ah,BYTE PTR [eax]
  de:	28 55 62             	sub    BYTE PTR [ebp+0x62],dl
  e1:	75 6e                	jne    151 <_init-0x8048123>
  e3:	74 75                	je     15a <_init-0x804811a>
  e5:	20 34 2e             	and    BYTE PTR [esi+ebp*1],dh
  e8:	33 2e                	xor    ebp,DWORD PTR [esi]
  ea:	33 2d 35 75 62 75    	xor    ebp,DWORD PTR ds:0x75627535
  f0:	6e                   	outs   dx,BYTE PTR ds:[esi]
  f1:	74 75                	je     168 <_init-0x804810c>
  f3:	34 29                	xor    al,0x29
  f5:	20 34 2e             	and    BYTE PTR [esi+ebp*1],dh
  f8:	33 2e                	xor    ebp,DWORD PTR [esi]
  fa:	33 00                	xor    eax,DWORD PTR [eax]

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	1c 00                	sbb    al,0x0
   2:	00 00                	add    BYTE PTR [eax],al
   4:	02 00                	add    al,BYTE PTR [eax]
   6:	00 00                	add    BYTE PTR [eax],al
   8:	00 00                	add    BYTE PTR [eax],al
   a:	04 00                	add    al,0x0
   c:	00 00                	add    BYTE PTR [eax],al
   e:	00 00                	add    BYTE PTR [eax],al
  10:	e0 82                	loopne ffffff94 <_end+0xf7fb5f24>
  12:	04 08                	add    al,0x8
  14:	22 00                	and    al,BYTE PTR [eax]
	...
  1e:	00 00                	add    BYTE PTR [eax],al
  20:	24 00                	and    al,0x0
  22:	00 00                	add    BYTE PTR [eax],al
  24:	02 00                	add    al,BYTE PTR [eax]
  26:	ed                   	in     eax,dx
  27:	00 00                	add    BYTE PTR [eax],al
  29:	00 04 00             	add    BYTE PTR [eax+eax*1],al
  2c:	00 00                	add    BYTE PTR [eax],al
  2e:	00 00                	add    BYTE PTR [eax],al
  30:	74 82                	je     ffffffb4 <_end+0xf7fb5f44>
  32:	04 08                	add    al,0x8
  34:	22 00                	and    al,BYTE PTR [eax]
  36:	00 00                	add    BYTE PTR [eax],al
  38:	6c                   	ins    BYTE PTR es:[edi],dx
  39:	84 04 08             	test   BYTE PTR [eax+ecx*1],al
  3c:	13 00                	adc    eax,DWORD PTR [eax]
	...
  46:	00 00                	add    BYTE PTR [eax],al
  48:	1c 00                	sbb    al,0x0
  4a:	00 00                	add    BYTE PTR [eax],al
  4c:	02 00                	add    al,BYTE PTR [eax]
  4e:	65 01 00             	add    DWORD PTR gs:[eax],eax
  51:	00 04 00             	add    BYTE PTR [eax+eax*1],al
  54:	00 00                	add    BYTE PTR [eax],al
  56:	00 00                	add    BYTE PTR [eax],al
  58:	94                   	xchg   esp,eax
  59:	83 04 08 2d          	add    DWORD PTR [eax+ecx*1],0x2d
	...
  65:	00 00                	add    BYTE PTR [eax],al
  67:	00 24 00             	add    BYTE PTR [eax+eax*1],ah
  6a:	00 00                	add    BYTE PTR [eax],al
  6c:	02 00                	add    al,BYTE PTR [eax]
  6e:	ef                   	out    dx,eax
  6f:	01 00                	add    DWORD PTR [eax],eax
  71:	00 04 00             	add    BYTE PTR [eax+eax*1],al
  74:	00 00                	add    BYTE PTR [eax],al
  76:	00 00                	add    BYTE PTR [eax],al
  78:	a0 82 04 08 04       	mov    al,ds:0x4080482
  7d:	00 00                	add    BYTE PTR [eax],al
  7f:	00 84 84 04 08 04 00 	add    BYTE PTR [esp+eax*4+0x40804],al
	...

Disassembly of section .debug_pubnames:

00000000 <.debug_pubnames>:
   0:	21 00                	and    DWORD PTR [eax],eax
   2:	00 00                	add    BYTE PTR [eax],al
   4:	02 00                	add    al,BYTE PTR [eax]
   6:	60                   	pusha  
   7:	00 00                	add    BYTE PTR [eax],al
   9:	00 8d 00 00 00 75    	add    BYTE PTR [ebp+0x75000000],cl
   f:	00 00                	add    BYTE PTR [eax],al
  11:	00 5f 49             	add    BYTE PTR [edi+0x49],bl
  14:	4f                   	dec    edi
  15:	5f                   	pop    edi
  16:	73 74                	jae    8c <_init-0x80481e8>
  18:	64 69 6e 5f 75 73 65 	imul   ebp,DWORD PTR fs:[esi+0x5f],0x64657375
  1f:	64 
  20:	00 00                	add    BYTE PTR [eax],al
  22:	00 00                	add    BYTE PTR [eax],al
  24:	00 25 00 00 00 02    	add    BYTE PTR ds:0x2000000,ah
  2a:	00 65 01             	add    BYTE PTR [ebp+0x1],ah
  2d:	00 00                	add    BYTE PTR [eax],al
  2f:	8a 00                	mov    al,BYTE PTR [eax]
  31:	00 00                	add    BYTE PTR [eax],al
  33:	25 00 00 00 6d       	and    eax,0x6d000000
  38:	61                   	popa   
  39:	69 6e 00 77 00 00 00 	imul   ebp,DWORD PTR [esi+0x0],0x77
  40:	73 68                	jae    aa <_init-0x80481ca>
  42:	65                   	gs
  43:	6c                   	ins    BYTE PTR es:[edi],dx
  44:	6c                   	ins    BYTE PTR es:[edi],dx
  45:	63 6f 64             	arpl   WORD PTR [edi+0x64],bp
  48:	65 00 00             	add    BYTE PTR gs:[eax],al
  4b:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	5c                   	pop    esp
   1:	00 00                	add    BYTE PTR [eax],al
   3:	00 02                	add    BYTE PTR [edx],al
   5:	00 00                	add    BYTE PTR [eax],al
   7:	00 00                	add    BYTE PTR [eax],al
   9:	00 04 01             	add    BYTE PTR [ecx+eax*1],al
   c:	00 00                	add    BYTE PTR [eax],al
   e:	00 00                	add    BYTE PTR [eax],al
  10:	e0 82                	loopne ffffff94 <_end+0xf7fb5f24>
  12:	04 08                	add    al,0x8
  14:	02 83 04 08 2e 2e    	add    al,BYTE PTR [ebx+0x2e2e0804]
  1a:	2f                   	das    
  1b:	73 79                	jae    96 <_init-0x80481de>
  1d:	73 64                	jae    83 <_init-0x80481f1>
  1f:	65                   	gs
  20:	70 73                	jo     95 <_init-0x80481df>
  22:	2f                   	das    
  23:	69 33 38 36 2f 65    	imul   esi,DWORD PTR [ebx],0x652f3638
  29:	6c                   	ins    BYTE PTR es:[edi],dx
  2a:	66                   	data16
  2b:	2f                   	das    
  2c:	73 74                	jae    a2 <_init-0x80481d2>
  2e:	61                   	popa   
  2f:	72 74                	jb     a5 <_init-0x80481cf>
  31:	2e                   	cs
  32:	53                   	push   ebx
  33:	00 2f                	add    BYTE PTR [edi],ch
  35:	62 75 69             	bound  esi,QWORD PTR [ebp+0x69]
  38:	6c                   	ins    BYTE PTR es:[edi],dx
  39:	64                   	fs
  3a:	2f                   	das    
  3b:	62 75 69             	bound  esi,QWORD PTR [ebp+0x69]
  3e:	6c                   	ins    BYTE PTR es:[edi],dx
  3f:	64                   	fs
  40:	64                   	fs
  41:	2f                   	das    
  42:	67 6c                	addr16 ins BYTE PTR es:[di],dx
  44:	69 62 63 2d 32 2e 39 	imul   esp,DWORD PTR [edx+0x63],0x392e322d
  4b:	2f                   	das    
  4c:	63 73 75             	arpl   WORD PTR [ebx+0x75],si
  4f:	00 47 4e             	add    BYTE PTR [edi+0x4e],al
  52:	55                   	push   ebp
  53:	20 41 53             	and    BYTE PTR [ecx+0x53],al
  56:	20 32                	and    BYTE PTR [edx],dh
  58:	2e 31 39             	xor    DWORD PTR cs:[ecx],edi
  5b:	2e 31 00             	xor    DWORD PTR cs:[eax],eax
  5e:	01 80 89 00 00 00    	add    DWORD PTR [eax+0x89],eax
  64:	02 00                	add    al,BYTE PTR [eax]
  66:	14 00                	adc    al,0x0
  68:	00 00                	add    BYTE PTR [eax],al
  6a:	04 01                	add    al,0x1
  6c:	00 00                	add    BYTE PTR [eax],al
  6e:	00 00                	add    BYTE PTR [eax],al
  70:	01 66 00             	add    DWORD PTR [esi+0x0],esp
  73:	00 00                	add    BYTE PTR [eax],al
  75:	0c 00                	or     al,0x0
  77:	00 00                	add    BYTE PTR [eax],al
  79:	04 83                	add    al,0x83
  7b:	04 08                	add    al,0x8
  7d:	04 83                	add    al,0x83
  7f:	04 08                	add    al,0x8
  81:	5b                   	pop    ebx
  82:	00 00                	add    BYTE PTR [eax],al
  84:	00 02                	add    BYTE PTR [edx],al
  86:	01 08                	add    DWORD PTR [eax],ecx
  88:	58                   	pop    eax
  89:	00 00                	add    BYTE PTR [eax],al
  8b:	00 02                	add    BYTE PTR [edx],al
  8d:	02 07                	add    al,BYTE PTR [edi]
  8f:	6d                   	ins    DWORD PTR es:[edi],dx
  90:	00 00                	add    BYTE PTR [eax],al
  92:	00 02                	add    BYTE PTR [edx],al
  94:	04 07                	add    al,0x7
  96:	4b                   	dec    ebx
  97:	00 00                	add    BYTE PTR [eax],al
  99:	00 02                	add    BYTE PTR [edx],al
  9b:	04 07                	add    al,0x7
  9d:	46                   	inc    esi
  9e:	00 00                	add    BYTE PTR [eax],al
  a0:	00 02                	add    BYTE PTR [edx],al
  a2:	01 06                	add    DWORD PTR [esi],eax
  a4:	5a                   	pop    edx
  a5:	00 00                	add    BYTE PTR [eax],al
  a7:	00 02                	add    BYTE PTR [edx],al
  a9:	02 05 28 00 00 00    	add    al,BYTE PTR ds:0x28
  af:	03 04 05 69 6e 74 00 	add    eax,DWORD PTR [eax*1+0x746e69]
  b6:	02 08                	add    cl,BYTE PTR [eax]
  b8:	05 80 00 00 00       	add    eax,0x80
  bd:	02 08                	add    cl,BYTE PTR [eax]
  bf:	07                   	pop    es
  c0:	41                   	inc    ecx
  c1:	00 00                	add    BYTE PTR [eax],al
  c3:	00 02                	add    BYTE PTR [edx],al
  c5:	04 05                	add    al,0x5
  c7:	85 00                	test   DWORD PTR [eax],eax
  c9:	00 00                	add    BYTE PTR [eax],al
  cb:	04 04                	add    al,0x4
  cd:	07                   	pop    es
  ce:	02 01                	add    al,BYTE PTR [ecx]
  d0:	06                   	push   es
  d1:	61                   	popa   
  d2:	00 00                	add    BYTE PTR [eax],al
  d4:	00 05 32 00 00 00    	add    BYTE PTR ds:0x32,al
  da:	01 19                	add    DWORD PTR [ecx],ebx
  dc:	87 00                	xchg   DWORD PTR [eax],eax
  de:	00 00                	add    BYTE PTR [eax],al
  e0:	01 05 03 8c 84 04    	add    DWORD PTR ds:0x4848c03,eax
  e6:	08 06                	or     BYTE PTR [esi],al
  e8:	4f                   	dec    edi
  e9:	00 00                	add    BYTE PTR [eax],al
  eb:	00 00                	add    BYTE PTR [eax],al
  ed:	74 00                	je     ef <_init-0x8048185>
  ef:	00 00                	add    BYTE PTR [eax],al
  f1:	02 00                	add    al,BYTE PTR [eax]
  f3:	5f                   	pop    edi
  f4:	00 00                	add    BYTE PTR [eax],al
  f6:	00 04 01             	add    BYTE PTR [ecx+eax*1],al
  f9:	82                   	(bad)  
  fa:	00 00                	add    BYTE PTR [eax],al
  fc:	00 00                	add    BYTE PTR [eax],al
  fe:	00 00                	add    BYTE PTR [eax],al
 100:	00 2f                	add    BYTE PTR [edi],ch
 102:	62 75 69             	bound  esi,QWORD PTR [ebp+0x69]
 105:	6c                   	ins    BYTE PTR es:[edi],dx
 106:	64                   	fs
 107:	2f                   	das    
 108:	62 75 69             	bound  esi,QWORD PTR [ebp+0x69]
 10b:	6c                   	ins    BYTE PTR es:[edi],dx
 10c:	64                   	fs
 10d:	64                   	fs
 10e:	2f                   	das    
 10f:	67 6c                	addr16 ins BYTE PTR es:[di],dx
 111:	69 62 63 2d 32 2e 39 	imul   esp,DWORD PTR [edx+0x63],0x392e322d
 118:	2f                   	das    
 119:	62 75 69             	bound  esi,QWORD PTR [ebp+0x69]
 11c:	6c                   	ins    BYTE PTR es:[edi],dx
 11d:	64                   	fs
 11e:	2d 74 72 65 65       	sub    eax,0x65657274
 123:	2f                   	das    
 124:	69 33 38 36 2d 6c    	imul   esi,DWORD PTR [ebx],0x6c2d3638
 12a:	69 62 63 2f 63 73 75 	imul   esp,DWORD PTR [edx+0x63],0x7573632f
 131:	2f                   	das    
 132:	63 72 74             	arpl   WORD PTR [edx+0x74],si
 135:	69 2e 53 00 2f 62    	imul   ebp,DWORD PTR [esi],0x622f0053
 13b:	75 69                	jne    1a6 <_init-0x80480ce>
 13d:	6c                   	ins    BYTE PTR es:[edi],dx
 13e:	64                   	fs
 13f:	2f                   	das    
 140:	62 75 69             	bound  esi,QWORD PTR [ebp+0x69]
 143:	6c                   	ins    BYTE PTR es:[edi],dx
 144:	64                   	fs
 145:	64                   	fs
 146:	2f                   	das    
 147:	67 6c                	addr16 ins BYTE PTR es:[di],dx
 149:	69 62 63 2d 32 2e 39 	imul   esp,DWORD PTR [edx+0x63],0x392e322d
 150:	2f                   	das    
 151:	63 73 75             	arpl   WORD PTR [ebx+0x75],si
 154:	00 47 4e             	add    BYTE PTR [edi+0x4e],al
 157:	55                   	push   ebp
 158:	20 41 53             	and    BYTE PTR [ecx+0x53],al
 15b:	20 32                	and    BYTE PTR [edx],dh
 15d:	2e 31 39             	xor    DWORD PTR cs:[ecx],edi
 160:	2e 31 00             	xor    DWORD PTR cs:[eax],eax
 163:	01 80 86 00 00 00    	add    DWORD PTR [eax+0x86],eax
 169:	02 00                	add    al,BYTE PTR [eax]
 16b:	71 00                	jno    16d <_init-0x8048107>
 16d:	00 00                	add    BYTE PTR [eax],al
 16f:	04 01                	add    al,0x1
 171:	00 00                	add    BYTE PTR [eax],al
 173:	00 00                	add    BYTE PTR [eax],al
 175:	01 9d 00 00 00 ab    	add    DWORD PTR [ebp-0x55000000],ebx
 17b:	00 00                	add    BYTE PTR [eax],al
 17d:	00 94 83 04 08 c1 83 	add    BYTE PTR [ebx+eax*4-0x7c3ef7fc],dl
 184:	04 08                	add    al,0x8
 186:	2c 01                	sub    al,0x1
 188:	00 00                	add    BYTE PTR [eax],al
 18a:	02 01                	add    al,BYTE PTR [ecx]
 18c:	8e 00                	mov    es,WORD PTR [eax]
 18e:	00 00                	add    BYTE PTR [eax],al
 190:	01 05 50 00 00 00    	add    DWORD PTR ds:0x50,eax
 196:	94                   	xchg   esp,eax
 197:	83 04 08 c1          	add    DWORD PTR [eax+ecx*1],0xffffffc1
 19b:	83 04 08 00          	add    DWORD PTR [eax+ecx*1],0x0
 19f:	00 00                	add    BYTE PTR [eax],al
 1a1:	00 50 00             	add    BYTE PTR [eax+0x0],dl
 1a4:	00 00                	add    BYTE PTR [eax],al
 1a6:	03 72 65             	add    esi,DWORD PTR [edx+0x65]
 1a9:	74 00                	je     1ab <_init-0x80480c9>
 1ab:	01 06                	add    DWORD PTR [esi],eax
 1ad:	57                   	push   edi
 1ae:	00 00                	add    BYTE PTR [eax],al
 1b0:	00 02                	add    BYTE PTR [edx],al
 1b2:	91                   	xchg   ecx,eax
 1b3:	70 00                	jo     1b5 <_init-0x80480bf>
 1b5:	04 04                	add    al,0x4
 1b7:	05 69 6e 74 00       	add    eax,0x746e69
 1bc:	05 04 50 00 00       	add    eax,0x5004
 1c1:	00 06                	add    BYTE PTR [esi],al
 1c3:	70 00                	jo     1c5 <_init-0x80480af>
 1c5:	00 00                	add    BYTE PTR [eax],al
 1c7:	6d                   	ins    DWORD PTR es:[edi],dx
 1c8:	00 00                	add    BYTE PTR [eax],al
 1ca:	00 07                	add    BYTE PTR [edi],al
 1cc:	6d                   	ins    DWORD PTR es:[edi],dx
 1cd:	00 00                	add    BYTE PTR [eax],al
 1cf:	00 26                	add    BYTE PTR [esi],ah
 1d1:	00 08                	add    BYTE PTR [eax],cl
 1d3:	04 07                	add    al,0x7
 1d5:	09 01                	or     DWORD PTR [ecx],eax
 1d7:	06                   	push   es
 1d8:	61                   	popa   
 1d9:	00 00                	add    BYTE PTR [eax],al
 1db:	00 0a                	add    BYTE PTR [edx],cl
 1dd:	93                   	xchg   ebx,eax
 1de:	00 00                	add    BYTE PTR [eax],al
 1e0:	00 01                	add    BYTE PTR [ecx],al
 1e2:	01 5d 00             	add    DWORD PTR [ebp+0x0],ebx
 1e5:	00 00                	add    BYTE PTR [eax],al
 1e7:	01 05 03 40 a0 04    	add    DWORD PTR ds:0x4a04003,eax
 1ed:	08 00                	or     BYTE PTR [eax],al
 1ef:	4c                   	dec    esp
 1f0:	00 00                	add    BYTE PTR [eax],al
 1f2:	00 02                	add    BYTE PTR [edx],al
 1f4:	00 f6                	add    dh,dh
 1f6:	00 00                	add    BYTE PTR [eax],al
 1f8:	00 04 01             	add    BYTE PTR [ecx+eax*1],al
 1fb:	6b 01 00             	imul   eax,DWORD PTR [ecx],0x0
 1fe:	00 20                	add    BYTE PTR [eax],ah
 200:	00 00                	add    BYTE PTR [eax],al
 202:	00 2f                	add    BYTE PTR [edi],ch
 204:	74 6d                	je     273 <_init-0x8048001>
 206:	70 2f                	jo     237 <_init-0x804803d>
 208:	63 63 6a             	arpl   WORD PTR [ebx+0x6a],sp
 20b:	62 73 6d             	bound  esi,QWORD PTR [ebx+0x6d]
 20e:	34 7a                	xor    al,0x7a
 210:	2e                   	cs
 211:	73 00                	jae    213 <_init-0x8048061>
 213:	2f                   	das    
 214:	62 75 69             	bound  esi,QWORD PTR [ebp+0x69]
 217:	6c                   	ins    BYTE PTR es:[edi],dx
 218:	64                   	fs
 219:	2f                   	das    
 21a:	62 75 69             	bound  esi,QWORD PTR [ebp+0x69]
 21d:	6c                   	ins    BYTE PTR es:[edi],dx
 21e:	64                   	fs
 21f:	64                   	fs
 220:	2f                   	das    
 221:	67 6c                	addr16 ins BYTE PTR es:[di],dx
 223:	69 62 63 2d 32 2e 39 	imul   esp,DWORD PTR [edx+0x63],0x392e322d
 22a:	2f                   	das    
 22b:	63 73 75             	arpl   WORD PTR [ebx+0x75],si
 22e:	00 47 4e             	add    BYTE PTR [edi+0x4e],al
 231:	55                   	push   ebp
 232:	20 41 53             	and    BYTE PTR [ecx+0x53],al
 235:	20 32                	and    BYTE PTR [edx],dh
 237:	2e 31 39             	xor    DWORD PTR cs:[ecx],edi
 23a:	2e 31 00             	xor    DWORD PTR cs:[eax],eax
 23d:	01                   	.byte 0x1
 23e:	80                   	.byte 0x80

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	01 11                	add    DWORD PTR [ecx],edx
   2:	00 10                	add    BYTE PTR [eax],dl
   4:	06                   	push   es
   5:	11 01                	adc    DWORD PTR [ecx],eax
   7:	12 01                	adc    al,BYTE PTR [ecx]
   9:	03 08                	add    ecx,DWORD PTR [eax]
   b:	1b 08                	sbb    ecx,DWORD PTR [eax]
   d:	25 08 13 05 00       	and    eax,0x51308
  12:	00 00                	add    BYTE PTR [eax],al
  14:	01 11                	add    DWORD PTR [ecx],edx
  16:	01 25 0e 13 0b 03    	add    DWORD PTR ds:0x30b130e,esp
  1c:	0e                   	push   cs
  1d:	1b 0e                	sbb    ecx,DWORD PTR [esi]
  1f:	11 01                	adc    DWORD PTR [ecx],eax
  21:	12 01                	adc    al,BYTE PTR [ecx]
  23:	10 06                	adc    BYTE PTR [esi],al
  25:	00 00                	add    BYTE PTR [eax],al
  27:	02 24 00             	add    ah,BYTE PTR [eax+eax*1]
  2a:	0b 0b                	or     ecx,DWORD PTR [ebx]
  2c:	3e 0b 03             	or     eax,DWORD PTR ds:[ebx]
  2f:	0e                   	push   cs
  30:	00 00                	add    BYTE PTR [eax],al
  32:	03 24 00             	add    esp,DWORD PTR [eax+eax*1]
  35:	0b 0b                	or     ecx,DWORD PTR [ebx]
  37:	3e 0b 03             	or     eax,DWORD PTR ds:[ebx]
  3a:	08 00                	or     BYTE PTR [eax],al
  3c:	00 04 24             	add    BYTE PTR [esp],al
  3f:	00 0b                	add    BYTE PTR [ebx],cl
  41:	0b 3e                	or     edi,DWORD PTR [esi]
  43:	0b 00                	or     eax,DWORD PTR [eax]
  45:	00 05 34 00 03 0e    	add    BYTE PTR ds:0xe030034,al
  4b:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  4d:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  4f:	49                   	dec    ecx
  50:	13 3f                	adc    edi,DWORD PTR [edi]
  52:	0c 02                	or     al,0x2
  54:	0a 00                	or     al,BYTE PTR [eax]
  56:	00 06                	add    BYTE PTR [esi],al
  58:	26 00 49 13          	add    BYTE PTR es:[ecx+0x13],cl
  5c:	00 00                	add    BYTE PTR [eax],al
  5e:	00 01                	add    BYTE PTR [ecx],al
  60:	11 00                	adc    DWORD PTR [eax],eax
  62:	10 06                	adc    BYTE PTR [esi],al
  64:	55                   	push   ebp
  65:	06                   	push   es
  66:	03 08                	add    ecx,DWORD PTR [eax]
  68:	1b 08                	sbb    ecx,DWORD PTR [eax]
  6a:	25 08 13 05 00       	and    eax,0x51308
  6f:	00 00                	add    BYTE PTR [eax],al
  71:	01 11                	add    DWORD PTR [ecx],edx
  73:	01 25 0e 13 0b 03    	add    DWORD PTR ds:0x30b130e,esp
  79:	0e                   	push   cs
  7a:	1b 0e                	sbb    ecx,DWORD PTR [esi]
  7c:	11 01                	adc    DWORD PTR [ecx],eax
  7e:	12 01                	adc    al,BYTE PTR [ecx]
  80:	10 06                	adc    BYTE PTR [esi],al
  82:	00 00                	add    BYTE PTR [eax],al
  84:	02 2e                	add    ch,BYTE PTR [esi]
  86:	01 3f                	add    DWORD PTR [edi],edi
  88:	0c 03                	or     al,0x3
  8a:	0e                   	push   cs
  8b:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  8d:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  8f:	49                   	dec    ecx
  90:	13 11                	adc    edx,DWORD PTR [ecx]
  92:	01 12                	add    DWORD PTR [edx],edx
  94:	01 40 06             	add    DWORD PTR [eax+0x6],eax
  97:	01 13                	add    DWORD PTR [ebx],edx
  99:	00 00                	add    BYTE PTR [eax],al
  9b:	03 34 00             	add    esi,DWORD PTR [eax+eax*1]
  9e:	03 08                	add    ecx,DWORD PTR [eax]
  a0:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  a2:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  a4:	49                   	dec    ecx
  a5:	13 02                	adc    eax,DWORD PTR [edx]
  a7:	0a 00                	or     al,BYTE PTR [eax]
  a9:	00 04 24             	add    BYTE PTR [esp],al
  ac:	00 0b                	add    BYTE PTR [ebx],cl
  ae:	0b 3e                	or     edi,DWORD PTR [esi]
  b0:	0b 03                	or     eax,DWORD PTR [ebx]
  b2:	08 00                	or     BYTE PTR [eax],al
  b4:	00 05 0f 00 0b 0b    	add    BYTE PTR ds:0xb0b000f,al
  ba:	49                   	dec    ecx
  bb:	13 00                	adc    eax,DWORD PTR [eax]
  bd:	00 06                	add    BYTE PTR [esi],al
  bf:	01 01                	add    DWORD PTR [ecx],eax
  c1:	49                   	dec    ecx
  c2:	13 01                	adc    eax,DWORD PTR [ecx]
  c4:	13 00                	adc    eax,DWORD PTR [eax]
  c6:	00 07                	add    BYTE PTR [edi],al
  c8:	21 00                	and    DWORD PTR [eax],eax
  ca:	49                   	dec    ecx
  cb:	13 2f                	adc    ebp,DWORD PTR [edi]
  cd:	0b 00                	or     eax,DWORD PTR [eax]
  cf:	00 08                	add    BYTE PTR [eax],cl
  d1:	24 00                	and    al,0x0
  d3:	0b 0b                	or     ecx,DWORD PTR [ebx]
  d5:	3e 0b 00             	or     eax,DWORD PTR ds:[eax]
  d8:	00 09                	add    BYTE PTR [ecx],cl
  da:	24 00                	and    al,0x0
  dc:	0b 0b                	or     ecx,DWORD PTR [ebx]
  de:	3e 0b 03             	or     eax,DWORD PTR ds:[ebx]
  e1:	0e                   	push   cs
  e2:	00 00                	add    BYTE PTR [eax],al
  e4:	0a 34 00             	or     dh,BYTE PTR [eax+eax*1]
  e7:	03 0e                	add    ecx,DWORD PTR [esi]
  e9:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  eb:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  ed:	49                   	dec    ecx
  ee:	13 3f                	adc    edi,DWORD PTR [edi]
  f0:	0c 02                	or     al,0x2
  f2:	0a 00                	or     al,BYTE PTR [eax]
  f4:	00 00                	add    BYTE PTR [eax],al
  f6:	01 11                	add    DWORD PTR [ecx],edx
  f8:	00 10                	add    BYTE PTR [eax],dl
  fa:	06                   	push   es
  fb:	55                   	push   ebp
  fc:	06                   	push   es
  fd:	03 08                	add    ecx,DWORD PTR [eax]
  ff:	1b 08                	sbb    ecx,DWORD PTR [eax]
 101:	25 08 13 05 00       	and    eax,0x51308
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	57                   	push   edi
   1:	00 00                	add    BYTE PTR [eax],al
   3:	00 02                	add    BYTE PTR [edx],al
   5:	00 32                	add    BYTE PTR [edx],dh
   7:	00 00                	add    BYTE PTR [eax],al
   9:	00 01                	add    BYTE PTR [ecx],al
   b:	01 fb                	add    ebx,edi
   d:	0e                   	push   cs
   e:	0d 00 01 01 01       	or     eax,0x1010100
  13:	01 00                	add    DWORD PTR [eax],eax
  15:	00 00                	add    BYTE PTR [eax],al
  17:	01 00                	add    DWORD PTR [eax],eax
  19:	00 01                	add    BYTE PTR [ecx],al
  1b:	2e                   	cs
  1c:	2e                   	cs
  1d:	2f                   	das    
  1e:	73 79                	jae    99 <_init-0x80481db>
  20:	73 64                	jae    86 <_init-0x80481ee>
  22:	65                   	gs
  23:	70 73                	jo     98 <_init-0x80481dc>
  25:	2f                   	das    
  26:	69 33 38 36 2f 65    	imul   esi,DWORD PTR [ebx],0x652f3638
  2c:	6c                   	ins    BYTE PTR es:[edi],dx
  2d:	66                   	data16
  2e:	00 00                	add    BYTE PTR [eax],al
  30:	73 74                	jae    a6 <_init-0x80481ce>
  32:	61                   	popa   
  33:	72 74                	jb     a9 <_init-0x80481cb>
  35:	2e                   	cs
  36:	53                   	push   ebx
  37:	00 01                	add    BYTE PTR [ecx],al
  39:	00 00                	add    BYTE PTR [eax],al
  3b:	00 00                	add    BYTE PTR [eax],al
  3d:	05 02 e0 82 04       	add    eax,0x482e002
  42:	08 03                	or     BYTE PTR [ebx],al
  44:	c0 00 01             	rol    BYTE PTR [eax],0x1
  47:	33 21                	xor    esp,DWORD PTR [ecx]
  49:	34 3d                	xor    al,0x3d
  4b:	25 22 03 18 20       	and    eax,0x20180322
  50:	59                   	pop    ecx
  51:	5a                   	pop    edx
  52:	21 22                	and    DWORD PTR [edx],esp
  54:	5c                   	pop    esp
  55:	5b                   	pop    ebx
  56:	02 01                	add    al,BYTE PTR [ecx]
  58:	00 01                	add    BYTE PTR [ecx],al
  5a:	01 23                	add    DWORD PTR [ebx],esp
  5c:	00 00                	add    BYTE PTR [eax],al
  5e:	00 02                	add    BYTE PTR [edx],al
  60:	00 1d 00 00 00 01    	add    BYTE PTR ds:0x1000000,bl
  66:	01 fb                	add    ebx,edi
  68:	0e                   	push   cs
  69:	0d 00 01 01 01       	or     eax,0x1010100
  6e:	01 00                	add    DWORD PTR [eax],eax
  70:	00 00                	add    BYTE PTR [eax],al
  72:	01 00                	add    DWORD PTR [eax],eax
  74:	00 01                	add    BYTE PTR [ecx],al
  76:	00 69 6e             	add    BYTE PTR [ecx+0x6e],ch
  79:	69 74 2e 63 00 00 00 	imul   esi,DWORD PTR [esi+ebp*1+0x63],0x0
  80:	00 
  81:	00 a6 00 00 00 02    	add    BYTE PTR [esi+0x2000000],ah
  87:	00 6f 00             	add    BYTE PTR [edi+0x0],ch
  8a:	00 00                	add    BYTE PTR [eax],al
  8c:	01 01                	add    DWORD PTR [ecx],eax
  8e:	fb                   	sti    
  8f:	0e                   	push   cs
  90:	0d 00 01 01 01       	or     eax,0x1010100
  95:	01 00                	add    DWORD PTR [eax],eax
  97:	00 00                	add    BYTE PTR [eax],al
  99:	01 00                	add    DWORD PTR [eax],eax
  9b:	00 01                	add    BYTE PTR [ecx],al
  9d:	2f                   	das    
  9e:	62 75 69             	bound  esi,QWORD PTR [ebp+0x69]
  a1:	6c                   	ins    BYTE PTR es:[edi],dx
  a2:	64                   	fs
  a3:	2f                   	das    
  a4:	62 75 69             	bound  esi,QWORD PTR [ebp+0x69]
  a7:	6c                   	ins    BYTE PTR es:[edi],dx
  a8:	64                   	fs
  a9:	64                   	fs
  aa:	2f                   	das    
  ab:	67 6c                	addr16 ins BYTE PTR es:[di],dx
  ad:	69 62 63 2d 32 2e 39 	imul   esp,DWORD PTR [edx+0x63],0x392e322d
  b4:	2f                   	das    
  b5:	62 75 69             	bound  esi,QWORD PTR [ebp+0x69]
  b8:	6c                   	ins    BYTE PTR es:[edi],dx
  b9:	64                   	fs
  ba:	2d 74 72 65 65       	sub    eax,0x65657274
  bf:	2f                   	das    
  c0:	69 33 38 36 2d 6c    	imul   esi,DWORD PTR [ebx],0x6c2d3638
  c6:	69 62 63 2f 63 73 75 	imul   esp,DWORD PTR [edx+0x63],0x7573632f
  cd:	00 2e                	add    BYTE PTR [esi],ch
  cf:	2e                   	cs
  d0:	2f                   	das    
  d1:	73 79                	jae    14c <_init-0x8048128>
  d3:	73 64                	jae    139 <_init-0x804813b>
  d5:	65                   	gs
  d6:	70 73                	jo     14b <_init-0x8048129>
  d8:	2f                   	das    
  d9:	67 65 6e             	addr16 outs dx,BYTE PTR gs:[si]
  dc:	65                   	gs
  dd:	72 69                	jb     148 <_init-0x804812c>
  df:	63 00                	arpl   WORD PTR [eax],ax
  e1:	00 63 72             	add    BYTE PTR [ebx+0x72],ah
  e4:	74 69                	je     14f <_init-0x8048125>
  e6:	2e                   	cs
  e7:	53                   	push   ebx
  e8:	00 01                	add    BYTE PTR [ecx],al
  ea:	00 00                	add    BYTE PTR [eax],al
  ec:	69 6e 69 74 66 69 6e 	imul   ebp,DWORD PTR [esi+0x69],0x6e696674
  f3:	69 2e 63 00 02 00    	imul   ebp,DWORD PTR [esi],0x20063
  f9:	00 00                	add    BYTE PTR [eax],al
  fb:	00 05 02 74 82 04    	add    BYTE PTR ds:0x4827402,al
 101:	08 03                	or     BYTE PTR [ebx],al
 103:	0e                   	push   cs
 104:	01 21                	add    DWORD PTR [ecx],esp
 106:	2f                   	das    
 107:	21 3d 5a 21 67 67    	and    DWORD PTR ds:0x6767215a,edi
 10d:	2f                   	das    
 10e:	2f                   	das    
 10f:	02 05 00 01 01 04    	add    al,BYTE PTR ds:0x4010100
 115:	02 00                	add    al,BYTE PTR [eax]
 117:	05 02 6c 84 04       	add    eax,0x4846c02
 11c:	08 03                	or     BYTE PTR [ebx],al
 11e:	ec                   	in     al,dx
 11f:	00 01                	add    BYTE PTR [ecx],al
 121:	21 2f                	and    DWORD PTR [edi],ebp
 123:	21 3d 5a 21 02 06    	and    DWORD PTR ds:0x602215a,edi
 129:	00 01                	add    BYTE PTR [ecx],al
 12b:	01 3b                	add    DWORD PTR [ebx],edi
 12d:	00 00                	add    BYTE PTR [eax],al
 12f:	00 02                	add    BYTE PTR [edx],al
 131:	00 24 00             	add    BYTE PTR [eax+eax*1],ah
 134:	00 00                	add    BYTE PTR [eax],al
 136:	01 01                	add    DWORD PTR [ecx],eax
 138:	fb                   	sti    
 139:	0e                   	push   cs
 13a:	0d 00 01 01 01       	or     eax,0x1010100
 13f:	01 00                	add    DWORD PTR [eax],eax
 141:	00 00                	add    BYTE PTR [eax],al
 143:	01 00                	add    DWORD PTR [eax],eax
 145:	00 01                	add    BYTE PTR [ecx],al
 147:	00 67 65             	add    BYTE PTR [edi+0x65],ah
 14a:	74 5f                	je     1ab <_init-0x80480c9>
 14c:	73 68                	jae    1b6 <_init-0x80480be>
 14e:	65                   	gs
 14f:	6c                   	ins    BYTE PTR es:[edi],dx
 150:	6c                   	ins    BYTE PTR es:[edi],dx
 151:	5f                   	pop    edi
 152:	32 2e                	xor    ch,BYTE PTR [esi]
 154:	63 00                	arpl   WORD PTR [eax],ax
 156:	00 00                	add    BYTE PTR [eax],al
 158:	00 00                	add    BYTE PTR [eax],al
 15a:	00 05 02 94 83 04    	add    BYTE PTR ds:0x4839402,al
 160:	08 16                	or     BYTE PTR [esi],dl
 162:	08 14 91             	or     BYTE PTR [ecx+edx*4],dl
 165:	9f                   	lahf   
 166:	02 09                	add    cl,BYTE PTR [ecx]
 168:	00 01                	add    BYTE PTR [ecx],al
 16a:	01 50 00             	add    DWORD PTR [eax+0x0],edx
 16d:	00 00                	add    BYTE PTR [eax],al
 16f:	02 00                	add    al,BYTE PTR [eax]
 171:	26 00 00             	add    BYTE PTR es:[eax],al
 174:	00 01                	add    BYTE PTR [ecx],al
 176:	01 fb                	add    ebx,edi
 178:	0e                   	push   cs
 179:	0d 00 01 01 01       	or     eax,0x1010100
 17e:	01 00                	add    DWORD PTR [eax],eax
 180:	00 00                	add    BYTE PTR [eax],al
 182:	01 00                	add    DWORD PTR [eax],eax
 184:	00 01                	add    BYTE PTR [ecx],al
 186:	2f                   	das    
 187:	74 6d                	je     1f6 <_init-0x804807e>
 189:	70 00                	jo     18b <_init-0x80480e9>
 18b:	00 63 63             	add    BYTE PTR [ebx+0x63],ah
 18e:	6a 62                	push   0x62
 190:	73 6d                	jae    1ff <_init-0x8048075>
 192:	34 7a                	xor    al,0x7a
 194:	2e                   	cs
 195:	73 00                	jae    197 <_init-0x80480dd>
 197:	01 00                	add    DWORD PTR [eax],eax
 199:	00 00                	add    BYTE PTR [eax],al
 19b:	00 05 02 a0 82 04    	add    BYTE PTR ds:0x482a002,al
 1a1:	08 03                	or     BYTE PTR [ebx],al
 1a3:	1f                   	pop    ds
 1a4:	01 21                	add    DWORD PTR [ecx],esp
 1a6:	21 21                	and    DWORD PTR [ecx],esp
 1a8:	02 01                	add    al,BYTE PTR [ecx]
 1aa:	00 01                	add    BYTE PTR [ecx],al
 1ac:	01 00                	add    DWORD PTR [eax],eax
 1ae:	05 02 84 84 04       	add    eax,0x4848402
 1b3:	08 03                	or     BYTE PTR [ebx],al
 1b5:	2d 01 21 21 21       	sub    eax,0x21212101
 1ba:	02 01                	add    al,BYTE PTR [ecx]
 1bc:	00 01                	add    BYTE PTR [ecx],al
 1be:	01                   	.byte 0x1

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	10 00                	adc    BYTE PTR [eax],al
   2:	00 00                	add    BYTE PTR [eax],al
   4:	ff                   	(bad)  
   5:	ff                   	(bad)  
   6:	ff                   	(bad)  
   7:	ff 01                	inc    DWORD PTR [ecx]
   9:	00 01                	add    BYTE PTR [ecx],al
   b:	7c 08                	jl     15 <_init-0x804825f>
   d:	0c 04                	or     al,0x4
   f:	04 88                	add    al,0x88
  11:	01 00                	add    DWORD PTR [eax],eax
  13:	00 24 00             	add    BYTE PTR [eax+eax*1],ah
  16:	00 00                	add    BYTE PTR [eax],al
  18:	00 00                	add    BYTE PTR [eax],al
  1a:	00 00                	add    BYTE PTR [eax],al
  1c:	94                   	xchg   esp,eax
  1d:	83 04 08 2d          	add    DWORD PTR [eax+ecx*1],0x2d
  21:	00 00                	add    BYTE PTR [eax],al
  23:	00 44 0c 01          	add    BYTE PTR [esp+ecx*1+0x1],al
  27:	00 09                	add    BYTE PTR [ecx],cl
  29:	04 01                	add    al,0x1
  2b:	46                   	inc    esi
  2c:	0c 04                	or     al,0x4
  2e:	04 41                	add    al,0x41
  30:	0e                   	push   cs
  31:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
  37:	41                   	inc    ecx
  38:	84 03                	test   BYTE PTR [ebx],al
	...

Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	47                   	inc    edi
   1:	4e                   	dec    esi
   2:	55                   	push   ebp
   3:	20 43 20             	and    BYTE PTR [ebx+0x20],al
   6:	34 2e                	xor    al,0x2e
   8:	33 2e                	xor    ebp,DWORD PTR [esi]
   a:	33 00                	xor    eax,DWORD PTR [eax]
   c:	2f                   	das    
   d:	62 75 69             	bound  esi,QWORD PTR [ebp+0x69]
  10:	6c                   	ins    BYTE PTR es:[edi],dx
  11:	64                   	fs
  12:	2f                   	das    
  13:	62 75 69             	bound  esi,QWORD PTR [ebp+0x69]
  16:	6c                   	ins    BYTE PTR es:[edi],dx
  17:	64                   	fs
  18:	64                   	fs
  19:	2f                   	das    
  1a:	67 6c                	addr16 ins BYTE PTR es:[di],dx
  1c:	69 62 63 2d 32 2e 39 	imul   esp,DWORD PTR [edx+0x63],0x392e322d
  23:	2f                   	das    
  24:	63 73 75             	arpl   WORD PTR [ebx+0x75],si
  27:	00 73 68             	add    BYTE PTR [ebx+0x68],dh
  2a:	6f                   	outs   dx,DWORD PTR ds:[esi]
  2b:	72 74                	jb     a1 <_init-0x80481d3>
  2d:	20 69 6e             	and    BYTE PTR [ecx+0x6e],ch
  30:	74 00                	je     32 <_init-0x8048242>
  32:	5f                   	pop    edi
  33:	49                   	dec    ecx
  34:	4f                   	dec    edi
  35:	5f                   	pop    edi
  36:	73 74                	jae    ac <_init-0x80481c8>
  38:	64 69 6e 5f 75 73 65 	imul   ebp,DWORD PTR fs:[esi+0x5f],0x64657375
  3f:	64 
  40:	00 6c 6f 6e          	add    BYTE PTR [edi+ebp*2+0x6e],ch
  44:	67 20 6c 6f          	addr16 and BYTE PTR [si+0x6f],ch
  48:	6e                   	outs   dx,BYTE PTR ds:[esi]
  49:	67 20 75 6e          	addr16 and BYTE PTR [di+0x6e],dh
  4d:	73 69                	jae    b8 <_init-0x80481bc>
  4f:	67 6e                	addr16 outs dx,BYTE PTR ds:[si]
  51:	65 64 20 69 6e       	and    BYTE PTR fs:gs:[ecx+0x6e],ch
  56:	74 00                	je     58 <_init-0x804821c>
  58:	75 6e                	jne    c8 <_init-0x80481ac>
  5a:	73 69                	jae    c5 <_init-0x80481af>
  5c:	67 6e                	addr16 outs dx,BYTE PTR ds:[si]
  5e:	65 64 20 63 68       	and    BYTE PTR fs:gs:[ebx+0x68],ah
  63:	61                   	popa   
  64:	72 00                	jb     66 <_init-0x804820e>
  66:	69 6e 69 74 2e 63 00 	imul   ebp,DWORD PTR [esi+0x69],0x632e74
  6d:	73 68                	jae    d7 <_init-0x804819d>
  6f:	6f                   	outs   dx,DWORD PTR ds:[esi]
  70:	72 74                	jb     e6 <_init-0x804818e>
  72:	20 75 6e             	and    BYTE PTR [ebp+0x6e],dh
  75:	73 69                	jae    e0 <_init-0x8048194>
  77:	67 6e                	addr16 outs dx,BYTE PTR ds:[si]
  79:	65 64 20 69 6e       	and    BYTE PTR fs:gs:[ecx+0x6e],ch
  7e:	74 00                	je     80 <_init-0x80481f4>
  80:	6c                   	ins    BYTE PTR es:[edi],dx
  81:	6f                   	outs   dx,DWORD PTR ds:[esi]
  82:	6e                   	outs   dx,BYTE PTR ds:[esi]
  83:	67 20 6c 6f          	addr16 and BYTE PTR [si+0x6f],ch
  87:	6e                   	outs   dx,BYTE PTR ds:[esi]
  88:	67 20 69 6e          	addr16 and BYTE PTR [bx+di+0x6e],ch
  8c:	74 00                	je     8e <_init-0x80481e6>
  8e:	6d                   	ins    DWORD PTR es:[edi],dx
  8f:	61                   	popa   
  90:	69 6e 00 73 68 65 6c 	imul   ebp,DWORD PTR [esi+0x0],0x6c656873
  97:	6c                   	ins    BYTE PTR es:[edi],dx
  98:	63 6f 64             	arpl   WORD PTR [edi+0x64],bp
  9b:	65 00 67 65          	add    BYTE PTR gs:[edi+0x65],ah
  9f:	74 5f                	je     100 <_init-0x8048174>
  a1:	73 68                	jae    10b <_init-0x8048169>
  a3:	65                   	gs
  a4:	6c                   	ins    BYTE PTR es:[edi],dx
  a5:	6c                   	ins    BYTE PTR es:[edi],dx
  a6:	5f                   	pop    edi
  a7:	32 2e                	xor    ch,BYTE PTR [esi]
  a9:	63 00                	arpl   WORD PTR [eax],ax
  ab:	2f                   	das    
  ac:	68 6f 6d 65 2f       	push   0x2f656d6f
  b1:	73 65                	jae    118 <_init-0x804815c>
  b3:	65                   	gs
  b4:	64                   	fs
  b5:	2f                   	das    
  b6:	43                   	inc    ebx
  b7:	4d                   	dec    ebp
  b8:	50                   	push   eax
  b9:	45                   	inc    ebp
  ba:	32 37                	xor    dh,BYTE PTR [edi]
  bc:	39 2f                	cmp    DWORD PTR [edi],ebp
  be:	6d                   	ins    DWORD PTR es:[edi],dx
  bf:	6f                   	outs   dx,DWORD PTR ds:[esi]
  c0:	64                   	fs
  c1:	75 6c                	jne    12f <_init-0x8048145>
  c3:	65                   	gs
  c4:	73 2f                	jae    f5 <_init-0x804817f>
  c6:	6d                   	ins    DWORD PTR es:[edi],dx
  c7:	6f                   	outs   dx,DWORD PTR ds:[esi]
  c8:	64                   	fs
  c9:	75 6c                	jne    137 <_init-0x804813d>
  cb:	65 33 2f             	xor    ebp,DWORD PTR gs:[edi]
  ce:	65                   	gs
  cf:	78 70                	js     141 <_init-0x8048133>
  d1:	6c                   	ins    BYTE PTR es:[edi],dx
  d2:	6f                   	outs   dx,DWORD PTR ds:[esi]
  d3:	69                   	.byte 0x69
  d4:	74 73                	je     149 <_init-0x804812b>
	...

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
   0:	00 00                	add    BYTE PTR [eax],al
   2:	00 00                	add    BYTE PTR [eax],al
   4:	04 00                	add    al,0x0
   6:	00 00                	add    BYTE PTR [eax],al
   8:	02 00                	add    al,BYTE PTR [eax]
   a:	74 04                	je     10 <_init-0x8048264>
   c:	04 00                	add    al,0x0
   e:	00 00                	add    BYTE PTR [eax],al
  10:	0a 00                	or     al,BYTE PTR [eax]
  12:	00 00                	add    BYTE PTR [eax],al
  14:	01 00                	add    DWORD PTR [eax],eax
  16:	51                   	push   ecx
  17:	0a 00                	or     al,BYTE PTR [eax]
  19:	00 00                	add    BYTE PTR [eax],al
  1b:	0b 00                	or     eax,DWORD PTR [eax]
  1d:	00 00                	add    BYTE PTR [eax],al
  1f:	02 00                	add    al,BYTE PTR [eax]
  21:	74 04                	je     27 <_init-0x804824d>
  23:	0b 00                	or     eax,DWORD PTR [eax]
  25:	00 00                	add    BYTE PTR [eax],al
  27:	0d 00 00 00 02       	or     eax,0x2000000
  2c:	00 74 08 0d          	add    BYTE PTR [eax+ecx*1+0xd],dh
  30:	00 00                	add    BYTE PTR [eax],al
  32:	00 2d 00 00 00 02    	add    BYTE PTR ds:0x2000000,ch
  38:	00 75 08             	add    BYTE PTR [ebp+0x8],dh
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	ff                   	(bad)  
   1:	ff                   	(bad)  
   2:	ff                   	(bad)  
   3:	ff 00                	inc    DWORD PTR [eax]
   5:	00 00                	add    BYTE PTR [eax],al
   7:	00 74 82 04          	add    BYTE PTR [edx+eax*4+0x4],dh
   b:	08 96 82 04 08 6c    	or     BYTE PTR [esi+0x6c080482],dl
  11:	84 04 08             	test   BYTE PTR [eax+ecx*1],al
  14:	7f 84                	jg     ffffff9a <_end+0xf7fb5f2a>
  16:	04 08                	add    al,0x8
	...
  20:	ff                   	(bad)  
  21:	ff                   	(bad)  
  22:	ff                   	(bad)  
  23:	ff 00                	inc    DWORD PTR [eax]
  25:	00 00                	add    BYTE PTR [eax],al
  27:	00 a0 82 04 08 a4    	add    BYTE PTR [eax-0x5bf7fb7e],ah
  2d:	82                   	(bad)  
  2e:	04 08                	add    al,0x8
  30:	84 84 04 08 88 84 04 	test   BYTE PTR [esp+eax*1+0x4848808],al
  37:	08 00                	or     BYTE PTR [eax],al
  39:	00 00                	add    BYTE PTR [eax],al
  3b:	00 00                	add    BYTE PTR [eax],al
  3d:	00 00                	add    BYTE PTR [eax],al
	...
